"use strict";(self.webpackChunkcarbide_docs=self.webpackChunkcarbide_docs||[]).push([[887],{4137:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>p});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},c=Object.keys(e);for(a=0;a<c.length;a++)t=c[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)t=c[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=a.createContext({}),d=function(e){var r=a.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=d(e.components);return a.createElement(s.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},h=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,c=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),h=d(t),p=n,y=h["".concat(s,".").concat(p)]||h[p]||l[p]||c;return t?a.createElement(y,o(o({ref:r},u),{},{components:t})):a.createElement(y,o({ref:r},u))}));function p(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var c=t.length,o=new Array(c);o[0]=h;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var d=2;d<c;d++)o[d]=t[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},9377:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>l,frontMatter:()=>c,metadata:()=>i,toc:()=>d});var a=t(7462),n=(t(7294),t(4137));const c={},o="Copying Images to a Registry",i={unversionedId:"registry-docs/copying-images",id:"registry-docs/copying-images",title:"Copying Images to a Registry",description:"This page will walk you through how you can copy the secured images from the hardened registry into another registry within a connected environment.",source:"@site/docs/registry-docs/copying-images.md",sourceDirName:"registry-docs",slug:"/registry-docs/copying-images",permalink:"/carbide-docs/docs/registry-docs/copying-images",draft:!1,editUrl:"https://github.com/rancherfederal/carbide-docs/edit/main/docs/registry-docs/copying-images.md",tags:[],version:"current",frontMatter:{},sidebar:"carbideSidebar",previous:{title:"Validating Images",permalink:"/carbide-docs/docs/registry-docs/validating-images"},next:{title:"Downloading the Images",permalink:"/carbide-docs/docs/registry-docs/downloading-images"}},s={},d=[{value:"Carbide",id:"carbide",level:2},{value:"K3s",id:"k3s",level:2},{value:"RKE2",id:"rke2",level:2},{value:"Rancher",id:"rancher",level:2},{value:"Cert Manager",id:"cert-manager",level:3},{value:"Rancher",id:"rancher-1",level:3},{value:"Longhorn",id:"longhorn",level:2},{value:"NeuVector",id:"neuvector",level:2},{value:"Kubewarden",id:"kubewarden",level:2}],u={toc:d};function l(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"copying-images-to-a-registry"},"Copying Images to a Registry"),(0,n.kt)("p",null,"This page will walk you through how you can copy the secured images from the hardened registry into another registry within a connected environment."),(0,n.kt)("p",null,"If you're copying images into an airgap, check the documents ",(0,n.kt)("a",{parentName:"p",href:"/carbide-docs/docs/registry-docs/downloading-images"},"here"),"."),(0,n.kt)("h2",{id:"carbide"},"Carbide"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"NOTE:")," We are working to improve the collection and formatting of the ",(0,n.kt)("inlineCode",{parentName:"p"},"carbide")," manifests and will be updating them."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# generate the hauler manifest for carbide\ncat <<EOF > carbide-images.yaml\napiVersion: content.hauler.cattle.io/v1alpha1\nkind: Images\nmetadata:\n  name: carbide-images\n  annotations:\n    hauler.dev/key: carbide-key.pub\n    hauler.dev/platform: linux/amd64\nspec:\n  images:\n$(curl -sfL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-images.txt | sed '/nats/d' | sed 's/^/    - name: /')\n---\napiVersion: content.hauler.cattle.io/v1alpha1\nkind: Images\nmetadata:\n  name: carbide-dependency-images\n  annotations:\n    hauler.dev/platform: linux/amd64\nspec:\n  images:\n$(curl -sfL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-images.txt | sed '/rgcr/d' | sed 's/^/    - name: /')\nEOF\n\n# fetch the content from generated hauler manifest\n# verify the location of the key and the platform/architecture\nhauler store sync -f carbide-images.yaml\n\n# copy the content from the hauler store to your registry\nhauler store copy --username <redacted> --password <redacted> registry://<registry-url>\n")),(0,n.kt)("h2",{id:"k3s"},"K3s"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# fetch the content from the carbide secured registry\n# verify the version, location of the key, and the platform/architecture\nhauler store sync --products k3s=v1.26.13-k3s2 --key carbide-key.pub --platform linux/amd64\n\n# copy the content from the hauler store to your registry\nhauler store copy --username <redacted> --password <redacted> registry://<registry-url>\n")),(0,n.kt)("h2",{id:"rke2"},"RKE2"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# fetch the content from the carbide secured registry\n# verify the version, location of the key, and the platform/architecture\nhauler store sync --products rke2=v1.26.13+rke2r1 --key carbide-key.pub --platform linux/amd64\n\n# copy the content from the hauler store to your registry\nhauler store copy --username <redacted> --password <redacted> registry://<registry-url>\n")),(0,n.kt)("h2",{id:"rancher"},"Rancher"),(0,n.kt)("h3",{id:"cert-manager"},"Cert Manager"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# fetch the content from the carbide secured registry\n# verify the version, location of the key, and the platform/architecture\nhauler store sync --products cert-manager=v1.14.1 --key carbide-key.pub --platform linux/amd64\n\n# copy the content from the hauler store to your registry\nhauler store copy --username <redacted> --password <redacted> registry://<registry-url>\n")),(0,n.kt)("h3",{id:"rancher-1"},"Rancher"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# fetch the content from the carbide secured registry\n# verify the version, location of the key, and the platform/architecture\nhauler store sync --products rancher=v2.8.2 --key carbide-key.pub --platform linux/amd64\n\n# copy the content from the hauler store to your registry\nhauler store copy --username <redacted> --password <redacted> registry://<registry-url>\n")),(0,n.kt)("h2",{id:"longhorn"},"Longhorn"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# fetch the content from the carbide secured registry\n# verify the version, location of the key, and the platform/architecture\nhauler store sync --products longhorn=v1.6.0 --key carbide-key.pub --platform linux/amd64\n\n# copy the content from the hauler store to your registry\nhauler store copy --username <redacted> --password <redacted> registry://<registry-url>\n")),(0,n.kt)("h2",{id:"neuvector"},"NeuVector"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# fetch the content from the carbide secured registry\n# verify the version, location of the key, and the platform/architecture\nhauler store sync --products neuvector=v5.3.0 --key carbide-key.pub --platform linux/amd64\n\n# copy the content from the hauler store to your registry\nhauler store copy --username <redacted> --password <redacted> registry://<registry-url>\n")),(0,n.kt)("h2",{id:"kubewarden"},"Kubewarden"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# fetch the content from the carbide secured registry\n# verify the version, location of the key, and the platform/architecture\nhauler store sync --products kubewarden=kubewarden-controller-2.0.8 --key carbide-key.pub --platform linux/amd64\n\n# copy the content from the hauler store to your registry\nhauler store copy --username <redacted> --password <redacted> registry://<registry-url>\n")))}l.isMDXComponent=!0}}]);