"use strict";(self.webpackChunkcarbide_docs=self.webpackChunkcarbide_docs||[]).push([[9857],{4795:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>a,toc:()=>i});const a=JSON.parse('{"id":"registry-docs/loading-images","title":"Loading Images to a Registry","description":"Once you\'ve downloaded your desired images from the Carbide Secured Registry (CSR), follow these steps to load copy the content to your airgapped registry.","source":"@site/docs/registry-docs/loading-images.md","sourceDirName":"registry-docs","slug":"/registry-docs/loading-images","permalink":"/carbide-docs/docs/registry-docs/loading-images","draft":false,"unlisted":false,"editUrl":"https://github.com/rancherfederal/carbide-docs/edit/main/docs/registry-docs/loading-images.md","tags":[],"version":"current","frontMatter":{},"sidebar":"carbideSidebar","previous":{"title":"Downloading the Images","permalink":"/carbide-docs/docs/registry-docs/downloading-images"},"next":{"title":"Helm Charts","permalink":"/carbide-docs/docs/registry-docs/carbide-charts"}}');var n=s(4848),t=s(8453);const d={},o="Loading Images to a Registry",l={},i=[{value:"Adding Images to Airgap Registry",id:"adding-images-to-airgap-registry",level:2},{value:"Carbide",id:"carbide",level:3},{value:"Rancher",id:"rancher",level:3},{value:"Cert Manager",id:"cert-manager",level:3},{value:"RKE2",id:"rke2",level:3},{value:"K3s",id:"k3s",level:3},{value:"Harvester",id:"harvester",level:3},{value:"Longhorn",id:"longhorn",level:3},{value:"NeuVector",id:"neuvector",level:3},{value:"Kubewarden",id:"kubewarden",level:3}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"loading-images-to-a-registry",children:"Loading Images to a Registry"})}),"\n",(0,n.jsx)(r.p,{children:"Once you've downloaded your desired images from the Carbide Secured Registry (CSR), follow these steps to load copy the content to your airgapped registry."}),"\n",(0,n.jsxs)(r.p,{children:["These instructions assume you have ",(0,n.jsx)(r.a,{href:"/carbide-docs/docs/registry-docs/downloading-images",children:"downloaded the images"})," and transferred the tarballs to your airgapped environment."]}),"\n",(0,n.jsxs)(r.p,{children:["This example uses ",(0,n.jsx)(r.a,{href:"https://docs.hauler.dev/docs/intro",children:"Hauler"}),", but any tool with the ability to push/pull an OCI image will be adequate."]}),"\n",(0,n.jsx)(r.h2,{id:"adding-images-to-airgap-registry",children:"Adding Images to Airgap Registry"}),"\n",(0,n.jsx)(r.h3,{id:"carbide",children:"Carbide"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"1. Load content from the tarball to the Hauler store."})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store load --store carbide-store carbide-images.tar.zst\n"})}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"2. Copy the content from the Hauler store to your registry."})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store copy --store carbide-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h3,{id:"rancher",children:"Rancher"}),"\n",(0,n.jsx)(r.p,{children:"Load from tarball:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store load --store rancher-store rancher-images.tar.zst\n"})}),"\n",(0,n.jsx)(r.p,{children:"Copy to registry:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store copy --store rancher-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h3,{id:"cert-manager",children:"Cert Manager"}),"\n",(0,n.jsx)(r.p,{children:"Load from tarball:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store load --store certmanager-store certmanager-images.tar.zst\n"})}),"\n",(0,n.jsx)(r.p,{children:"Copy to registry:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store copy --store certmanager-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h3,{id:"rke2",children:"RKE2"}),"\n",(0,n.jsx)(r.p,{children:"Load from tarball:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store load --store rke2-store rke2-images.tar.zst\n"})}),"\n",(0,n.jsx)(r.p,{children:"Copy to registry:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store copy --store rke2-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h3,{id:"k3s",children:"K3s"}),"\n",(0,n.jsx)(r.p,{children:"Load from tarball:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store load --store k3s-store k3s-images.tar.zst\n"})}),"\n",(0,n.jsx)(r.p,{children:"Copy to registry:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store copy --store k3s-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h3,{id:"harvester",children:"Harvester"}),"\n",(0,n.jsx)(r.p,{children:"Load from tarball:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store load --store harvester-store harvester-images.tar.zst\n"})}),"\n",(0,n.jsx)(r.p,{children:"Copy to registry:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store copy --store harvester-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h3,{id:"longhorn",children:"Longhorn"}),"\n",(0,n.jsx)(r.p,{children:"Load from tarball:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store load --store longhorn-store longhorn-images.tar.zst\n"})}),"\n",(0,n.jsx)(r.p,{children:"Copy to registry:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store copy --store longhorn-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h3,{id:"neuvector",children:"NeuVector"}),"\n",(0,n.jsx)(r.p,{children:"Load from tarball:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store load --store neuvector-store neuvector-images.tar.zst\n"})}),"\n",(0,n.jsx)(r.p,{children:"Copy to registry:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store copy --store neuvector-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h3,{id:"kubewarden",children:"Kubewarden"}),"\n",(0,n.jsx)(r.p,{children:"Load from tarball:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store load --store kubewarden-store kubewarden-images.tar.zst\n"})}),"\n",(0,n.jsx)(r.p,{children:"Copy to registry:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"hauler store copy --store kubewarden-store --username <redacted> --password <redacted> registry://<registry-url>\n"})})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>d,x:()=>o});var a=s(6540);const n={},t=a.createContext(n);function d(e){const r=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),a.createElement(t.Provider,{value:r},e.children)}}}]);