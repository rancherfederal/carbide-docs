"use strict";(self.webpackChunkcarbide_docs=self.webpackChunkcarbide_docs||[]).push([[2882],{7442:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"registry-docs/enforcement","title":"Enforcement","description":"Policy enforcement engines can be used to validate your cluster images against our public key. This will ensure only the images from our hardened registry are allowed to run.","source":"@site/docs/registry-docs/enforcement.md","sourceDirName":"registry-docs","slug":"/registry-docs/enforcement","permalink":"/carbide-docs/docs/registry-docs/enforcement","draft":false,"unlisted":false,"editUrl":"https://github.com/rancherfederal/carbide-docs/edit/main/docs/registry-docs/enforcement.md","tags":[],"version":"current","frontMatter":{},"sidebar":"carbideSidebar","previous":{"title":"Rancher Configuration","permalink":"/carbide-docs/docs/registry-docs/configuration/rancher"},"next":{"title":"RKE2/K3s Uninstall","permalink":"/carbide-docs/docs/registry-docs/uninstall-kubernetes"}}');var t=r(4848),a=r(8453);const s={},l="Enforcement",o={},c=[{value:"Kubewarden Enforcement",id:"kubewarden-enforcement",level:2},{value:"Installation",id:"installation",level:3},{value:"Private Registry",id:"private-registry",level:3},{value:"Copying Policy Artifact to a Registry (Connected Environments)",id:"copying-policy-artifact-to-a-registry-connected-environments",level:3},{value:"Airgapped Environments",id:"airgapped-environments",level:3},{value:"Saving Policy Artifact",id:"saving-policy-artifact",level:4},{value:"Loading Policy Artifact to a Registry",id:"loading-policy-artifact-to-a-registry",level:4},{value:"Creating the Policy",id:"creating-the-policy",level:3},{value:"Kyverno Enforcement",id:"kyverno-enforcement",level:2},{value:"Installation",id:"installation-1",level:3},{value:"Private Registry",id:"private-registry-1",level:3},{value:"Creating the Policy",id:"creating-the-policy-1",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"enforcement",children:"Enforcement"})}),"\n",(0,t.jsx)(n.p,{children:"Policy enforcement engines can be used to validate your cluster images against our public key. This will ensure only the images from our hardened registry are allowed to run."}),"\n",(0,t.jsx)(n.h2,{id:"kubewarden-enforcement",children:"Kubewarden Enforcement"}),"\n",(0,t.jsx)(n.p,{children:"The Kubewarden images can be pulled from the Carbide Secured Registry (CSR)."}),"\n",(0,t.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.p,{children:"To install Kubewarden, run the following commands, substituting your registry information."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Add and update the helm chart repository."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm repo add kubewarden https://charts.kubewarden.io\nhelm repo update\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Install the CRDs helm chart."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm install --wait -n kubewarden --create-namespace kubewarden-crds kubewarden/kubewarden-crds\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Install the controller helm chart."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'helm install --wait -n kubewarden kubewarden-controller kubewarden/kubewarden-controller --set "common.cattle.systemDefaultRegistry=<registry-url>"\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:"Install the defaults helm chart."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'helm install --wait -n kubewarden kubewarden-defaults kubewarden/kubewarden-defaults --set "common.cattle.systemDefaultRegistry=<registry-url>" kubewarden/kubewarden-defaults\n'})}),"\n",(0,t.jsxs)(n.p,{children:["For more information about installing Kubewarden, see the ",(0,t.jsx)(n.a,{href:"https://docs.kubewarden.io/quick-start#installation",children:"docs"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"private-registry",children:"Private Registry"}),"\n",(0,t.jsxs)(n.p,{children:["If your Rancher system images are in a private registry requiring authentication, you'll need to configure your Kubewarden policy-server with a ",(0,t.jsx)(n.a,{href:"https://docs.kubewarden.io/operator-manual/policy-servers/private-registry",children:"Pull Secret"})," in order for it to validate the signature."]}),"\n",(0,t.jsx)(n.h3,{id:"copying-policy-artifact-to-a-registry-connected-environments",children:"Copying Policy Artifact to a Registry (Connected Environments)"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Fetch the image from the Carbide Secured Registry."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"hauler store add image rgcrprod.azurecr.us/policies/verify-image-signatures:v0.1.7 --key carbide-key.pub --platform linux/amd64\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Copy the content from the Hauler store to your registry."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"hauler store copy --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"airgapped-environments",children:"Airgapped Environments"}),"\n",(0,t.jsx)(n.p,{children:"Use the below steps, substituting your registry, to validate and locally save the policy artifact."}),"\n",(0,t.jsx)(n.h4,{id:"saving-policy-artifact",children:"Saving Policy Artifact"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Fetch the image from the Carbide Secured Registry."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"hauler store add image rgcrprod.azurecr.us/policies/verify-image-signatures:v0.1.7 --key carbide-key.pub --platform linux/amd64\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Save and output the content from the Hauler store to tarball."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"hauler store save --filename kubewarden-policy.tar.zst\n"})}),"\n",(0,t.jsx)(n.h4,{id:"loading-policy-artifact-to-a-registry",children:"Loading Policy Artifact to a Registry"}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Load the content from the tarball to the Hauler store."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"hauler store load kubewarden-policy.tar.zst\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:"Copy the content from the Hauler store to your registry."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"hauler store copy --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"creating-the-policy",children:"Creating the Policy"}),"\n",(0,t.jsxs)(n.p,{children:["After installing/configuring Kubewarden and copying the policy to your registry, apply the following ClusterAdmissionPolicy (substituting ",(0,t.jsx)(n.code,{children:"<registry-url>"})," with your registry domain):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: policies.kubewarden.io/v1\nkind: ClusterAdmissionPolicy\nmetadata:\n  name: verify-image-signatures\nspec:\n  module: <registry-url>/policies/verify-image-signatures:v0.1.7\n  rules:\n    - apiGroups: ['', 'apps', 'batch']\n      apiVersions: ['v1']\n      resources:\n        [\n          'pods',\n          'deployments',\n          'statefulsets',\n          'replicationcontrollers',\n          'jobs',\n          'cronjobs',\n        ]\n      operations:\n        - CREATE\n        - UPDATE\n  mutating: true\n  settings:\n    signatures:\n      - image: '<registry-url>/carbide/*'\n        pubKeys:\n          - |\n            -----BEGIN PUBLIC KEY-----\n            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO\n            tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q==\n            -----END PUBLIC KEY-----\n      - image: '<registry-url>/jetstack/*'\n        pubKeys:\n          - |\n            -----BEGIN PUBLIC KEY-----\n            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO\n            tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q==\n            -----END PUBLIC KEY-----\n      - image: '<registry-url>/rancher/*'\n        pubKeys:\n          - |\n            -----BEGIN PUBLIC KEY-----\n            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO\n            tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q==\n            -----END PUBLIC KEY-----\n      - image: '<registry-url>/longhornio/*'\n        pubKeys:\n          - |\n            -----BEGIN PUBLIC KEY-----\n            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO\n            tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q==\n            -----END PUBLIC KEY-----\n      - image: '<registry-url>/neuvector/*'\n        pubKeys:\n          - |\n            -----BEGIN PUBLIC KEY-----\n            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO\n            tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q==\n            -----END PUBLIC KEY-----\n"})}),"\n",(0,t.jsx)(n.h2,{id:"kyverno-enforcement",children:"Kyverno Enforcement"}),"\n",(0,t.jsx)(n.h3,{id:"installation-1",children:"Installation"}),"\n",(0,t.jsxs)(n.p,{children:["Follow the instructions to install ",(0,t.jsx)(n.a,{href:"https://kyverno.io/docs/installation",children:"Kyverno"})," onto your cluster."]}),"\n",(0,t.jsx)(n.h3,{id:"private-registry-1",children:"Private Registry"}),"\n",(0,t.jsxs)(n.p,{children:["If your Rancher system images are in a private registry requiring authentication, you'll need to configure your Kyverno policy-server with a ",(0,t.jsx)(n.a,{href:"https://kyverno.io/policies/other/require_imagepullsecrets/require_imagepullsecrets",children:"Pull Secret"})," in order for it to validate the signature."]}),"\n",(0,t.jsx)(n.h3,{id:"creating-the-policy-1",children:"Creating the Policy"}),"\n",(0,t.jsxs)(n.p,{children:["After installing/configuring Kyverno, apply the following Policy (substituting ",(0,t.jsx)(n.code,{children:"<registry-url>"})," with your registry domain):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: kyverno.io/v1\nkind: Policy\nmetadata:\n  name: verify-image-signatures\nspec:\n  validationFailureAction: enforce\n  background: false\n  webhookTimeoutSeconds: 30\n  failurePolicy: Fail\n  rules:\n    - name: check-image\n      match:\n        any:\n          - resources:\n              kinds:\n                - Pod\n                - Deployment\n      verifyImages:\n        - imageReferences:\n            - '<registry-url>/carbide/*'\n            - '<registry-url>/jetstack/*'\n            - '<registry-url>/rancher/*'\n            - '<registry-url>/longhornio/*'\n            - '<registry-url>/neuvector/*'\n          attestors:\n            - count: 1\n              entries:\n                - keys:\n                    publicKeys: |-\n                      -----BEGIN PUBLIC KEY-----\n                      MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO\n                      tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q==\n                      -----END PUBLIC KEY-----\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var i=r(6540);const t={},a=i.createContext(t);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);