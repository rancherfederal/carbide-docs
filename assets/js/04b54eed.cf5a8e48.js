"use strict";(self.webpackChunkcarbide_docs=self.webpackChunkcarbide_docs||[]).push([[978],{2394:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>o,default:()=>l,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var n=t(4848),a=t(8453);const c={},o="Copying Images to a Registry",s={id:"registry-docs/copying-images",title:"Copying Images to a Registry",description:"This page will walk you through how you can copy the secured images from the hardened registry into another registry within a connected environment.",source:"@site/docs/registry-docs/copying-images.md",sourceDirName:"registry-docs",slug:"/registry-docs/copying-images",permalink:"/carbide-docs/docs/registry-docs/copying-images",draft:!1,unlisted:!1,editUrl:"https://github.com/rancherfederal/carbide-docs/edit/main/docs/registry-docs/copying-images.md",tags:[],version:"current",frontMatter:{},sidebar:"carbideSidebar",previous:{title:"Validating Images",permalink:"/carbide-docs/docs/registry-docs/validating-images"},next:{title:"Downloading the Images",permalink:"/carbide-docs/docs/registry-docs/downloading-images"}},i={},d=[{value:"Carbide",id:"carbide",level:2},{value:"K3s",id:"k3s",level:2},{value:"RKE2",id:"rke2",level:2},{value:"Rancher",id:"rancher",level:2},{value:"Cert Manager",id:"cert-manager",level:3},{value:"Rancher",id:"rancher-1",level:3},{value:"Longhorn",id:"longhorn",level:2},{value:"NeuVector",id:"neuvector",level:2},{value:"Kubewarden",id:"kubewarden",level:2}];function h(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"copying-images-to-a-registry",children:"Copying Images to a Registry"}),"\n",(0,n.jsx)(r.p,{children:"This page will walk you through how you can copy the secured images from the hardened registry into another registry within a connected environment."}),"\n",(0,n.jsxs)(r.p,{children:["If you're copying images into an airgap, check the documents ",(0,n.jsx)(r.a,{href:"/carbide-docs/docs/registry-docs/downloading-images",children:"here"}),"."]}),"\n",(0,n.jsx)(r.h2,{id:"carbide",children:"Carbide"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"NOTE:"})," We are actively working to improve the collection and formatting of the below procceses. Additionally, please see the ",(0,n.jsx)(r.a,{href:"https://rancherfederal.github.io/hauler-docs/docs/guides-references/hauler-content/images",children:"Hauler Docs"})," for how to specify a specific platform."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# generate the hauler manifest for carbide\ncat <<EOF > carbide-images.yaml\napiVersion: content.hauler.cattle.io/v1alpha1\nkind: Images\nmetadata:\n  name: carbide-images\n  annotations:\n    hauler.dev/key: carbide-key.pub\nspec:\n  images:\n$(curl -sfL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-images.txt | sed '/nats/d' | sed 's/^/    - name: /')\n---\napiVersion: content.hauler.cattle.io/v1alpha1\nkind: Images\nmetadata:\n  name: carbide-dependency-images\nspec:\n  images:\n$(curl -sfL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-images.txt | sed '/rgcr/d' | sed 's/^/    - name: /')\nEOF\n\n# fetch the content from generated hauler manifest\n# verify the location of the key and the platform/architecture\n# key verification is not used here due to natsio images not being signed\nhauler store sync --store carbide-store --files carbide-images.yaml --platform <platform/arch>\n\n# copy the content from the hauler store to your registry\nhauler store copy --store carbide-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h2,{id:"k3s",children:"K3s"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# fetch the content from the carbide secured registry\n# verify the version, location of the key, and the platform/architecture\nhauler store sync --store k3s-store --products k3s=v1.27.12-k3s1 --key carbide-key.pub --platform <platform/arch>\n\n# copy the content from the hauler store to your registry\nhauler store copy --store k3s-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h2,{id:"rke2",children:"RKE2"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# fetch the content from the carbide secured registry\n# verify the version, location of the key, and the platform/architecture\nhauler store sync --store rke2-store --products rke2=v1.27.12+rke2r1 --key carbide-key.pub --platform <platform/arch>\n\n# copy the content from the hauler store to your registry\nhauler store copy --store rke2-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h2,{id:"rancher",children:"Rancher"}),"\n",(0,n.jsx)(r.h3,{id:"cert-manager",children:"Cert Manager"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# fetch the content from the carbide secured registry\n# verify the version, location of the key, and the platform/architecture\nhauler store sync --store certmanager-store --products cert-manager=v1.14.4 --key carbide-key.pub --platform <platform/arch>\n\n# copy the content from the hauler store to your registry\nhauler store copy --store certmanager-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h3,{id:"rancher-1",children:"Rancher"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# fetch the content from the carbide secured registry\n# verify the version, location of the key, and the platform/architecture\nhauler store sync --store rancher-store --products rancher=v2.8.3 --key carbide-key.pub --platform <platform/arch>\n\n# copy the content from the hauler store to your registry\nhauler store copy --store rancher-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h2,{id:"longhorn",children:"Longhorn"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# fetch the content from the carbide secured registry\n# verify the version, location of the key, and the platform/architecture\nhauler store sync --store longhorn-store --products longhorn=v1.6.1 --key carbide-key.pub --platform <platform/arch>\n\n# copy the content from the hauler store to your registry\nhauler store copy --store longhorn-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h2,{id:"neuvector",children:"NeuVector"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# fetch the content from the carbide secured registry\n# verify the version, location of the key, and the platform/architecture\nhauler store sync --store neuvector-store --products neuvector=v5.3.2 --key carbide-key.pub --platform <platform/arch>\n\n# copy the content from the hauler store to your registry\nhauler store copy --store neuvector-store --username <redacted> --password <redacted> registry://<registry-url>\n"})}),"\n",(0,n.jsx)(r.h2,{id:"kubewarden",children:"Kubewarden"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"# authenticate into carbide secured registry\nhauler login -u <redacted> -p <redacted> rgcrprod.azurecr.us\n\n# download the public key for carbide\ncurl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub\n\n# fetch the content from the carbide secured registry\n# verify the version, location of the key, and the platform/architecture\nhauler store sync --store kubewarden-store --products kubewarden=kubewarden-controller-2.0.11 --key carbide-key.pub --platform <platform/arch>\n\n# copy the content from the hauler store to your registry\nhauler store copy --store kubewarden-store --username <redacted> --password <redacted> registry://<registry-url>\n"})})]})}function l(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>s});var n=t(6540);const a={},c=n.createContext(a);function o(e){const r=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(c.Provider,{value:r},e.children)}}}]);