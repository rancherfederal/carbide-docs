"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2420],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>y});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),y=i,g=d["".concat(s,".").concat(y)]||d[y]||p[y]||o;return t?r.createElement(g,a(a({ref:n},u),{},{components:t})):r.createElement(g,a({ref:n},u))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3129:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const o={},a="Enforcement",l={unversionedId:"registry-docs/enforcement",id:"registry-docs/enforcement",title:"Enforcement",description:"This page will walk you through configuring Policy Enforcement (Kubewarden, Kyverno, Open Policy Agent) to ensure images running in your cluster that come from the hardened registry are validated against our public key before deploying.",source:"@site/docs/registry-docs/9-enforcement.md",sourceDirName:"registry-docs",slug:"/registry-docs/enforcement",permalink:"/carbide-docs/docs/registry-docs/enforcement",draft:!1,editUrl:"https://github.com/rancherfederal/carbide-docs/edit/main/docs/registry-docs/9-enforcement.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{},sidebar:"carbideSidebar",previous:{title:"Rancher Manager Configuration",permalink:"/carbide-docs/docs/registry-docs/rancher-config"},next:{title:"Serving Container Images",permalink:"/carbide-docs/docs/registry-docs/x1-serving-images"}},s={},c=[{value:"Kubewarden Enforcement",id:"kubewarden-enforcement",level:2},{value:"Installation",id:"installation",level:3},{value:"Private Registry",id:"private-registry",level:3},{value:"Creating the Policy",id:"creating-the-policy",level:3},{value:"Kyverno Enforcement",id:"kyverno-enforcement",level:2},{value:"Installation",id:"installation-1",level:3},{value:"Private Registry",id:"private-registry-1",level:3},{value:"Creating the Policy",id:"creating-the-policy-1",level:3},{value:"OPA Gatekeeper Enforcement",id:"opa-gatekeeper-enforcement",level:2}],u={toc:c};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"enforcement"},"Enforcement"),(0,i.kt)("p",null,"This page will walk you through configuring Policy Enforcement (Kubewarden, Kyverno, Open Policy Agent) to ensure images running in your cluster that come from the hardened registry are validated against our public key before deploying."),(0,i.kt)("h2",{id:"kubewarden-enforcement"},"Kubewarden Enforcement"),(0,i.kt)("h3",{id:"installation"},"Installation"),(0,i.kt)("p",null,"See the docs on how to install ",(0,i.kt)("a",{parentName:"p",href:"https://docs.kubewarden.io/quick-start#installation"},"Kubewarden")," onto your cluster."),(0,i.kt)("h3",{id:"private-registry"},"Private Registry"),(0,i.kt)("p",null,"If your Rancher system images are in a private registry requiring authentication, you'll need to configure your Kubewarden policy-server with a ",(0,i.kt)("a",{parentName:"p",href:"https://docs.kubewarden.io/operator-manual/policy-servers/private-registry"},"Pull Secret")," in order for it to validate the signature."),(0,i.kt)("h3",{id:"creating-the-policy"},"Creating the Policy"),(0,i.kt)("p",null,"After installing/configuring Kubewarden, apply the following ClusterAdmissionPolicy (substituting ",(0,i.kt)("inlineCode",{parentName:"p"},"YOUR_REGISTRY_HERE")," with your registry domain):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: policies.kubewarden.io/v1\nkind: ClusterAdmissionPolicy\nmetadata:\n  name: verify-image-signatures\nspec:\n  module: ghcr.io/kubewarden/policies/verify-image-signatures:v0.1.7\n  rules:\n  - apiGroups: ["", "apps", "batch"]\n    apiVersions: ["v1"]\n    resources: ["pods", "deployments", "statefulsets", "replicationcontrollers", "jobs", "cronjobs"]\n    operations:\n    - CREATE\n    - UPDATE\n  mutating: true\n  settings:\n    signatures:\n    - image: "YOUR_REGISTRY_HERE/rancher/*"\n      pubKeys: \n        - |\n          -----BEGIN PUBLIC KEY-----\n          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO\n          tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q==\n          -----END PUBLIC KEY-----\n    - image: "YOUR_REGISTRY_HERE/longhornio/*"\n      pubKeys: \n        - |\n          -----BEGIN PUBLIC KEY-----\n          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO\n          tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q==\n          -----END PUBLIC KEY-----\n')),(0,i.kt)("h2",{id:"kyverno-enforcement"},"Kyverno Enforcement"),(0,i.kt)("h3",{id:"installation-1"},"Installation"),(0,i.kt)("p",null,"See the docs on how to install ",(0,i.kt)("a",{parentName:"p",href:"https://kyverno.io/docs/installation"},"Kyverno")," onto your cluster."),(0,i.kt)("h3",{id:"private-registry-1"},"Private Registry"),(0,i.kt)("p",null,"If your Rancher system images are in a private registry requiring authentication, you'll need to configure your Kyverno policy-server with a ",(0,i.kt)("a",{parentName:"p",href:"https://kyverno.io/policies/other/require_imagepullsecrets/require_imagepullsecrets"},"Pull Secret")," in order for it to validate the signature."),(0,i.kt)("h3",{id:"creating-the-policy-1"},"Creating the Policy"),(0,i.kt)("p",null,"After installing/configuring Kyverno, apply the following Policy (substituting ",(0,i.kt)("inlineCode",{parentName:"p"},"YOUR_REGISTRY_HERE")," with your registry domain):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: kyverno.io/v1\nkind: Policy\nmetadata:\n  name: verify-image-signatures\nspec:\n  validationFailureAction: enforce\n  background: false\n  webhookTimeoutSeconds: 30\n  failurePolicy: Fail\n  rules:\n    - name: check-image\n      match:\n        any:\n        - resources:\n            kinds:\n            - Pod\n            - Deployment\n      verifyImages:\n      - imageReferences:\n        - "YOUR_REGISTRY_HERE/rancher/*"\n        - "YOUR_REGISTRY_HERE/longhornio/*"\n        attestors:\n        - count: 1\n          entries:\n          - keys:\n              publicKeys: |-\n                -----BEGIN PUBLIC KEY-----\n                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO\n                tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q==\n                -----END PUBLIC KEY-----\n')),(0,i.kt)("h2",{id:"opa-gatekeeper-enforcement"},"OPA Gatekeeper Enforcement"),(0,i.kt)("p",null,"Gatekeeper can be used to verify image signatures through its ",(0,i.kt)("a",{parentName:"p",href:"https://open-policy-agent.github.io/gatekeeper/website/docs/externaldata"},"External Data Provider"),"."))}p.isMDXComponent=!0}}]);