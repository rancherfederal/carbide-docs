{"searchDocs":[{"title":"Prerequisites","type":0,"sectionRef":"#","url":"/carbide-docs/docs/airgapped-docs/prereqs","content":"Prerequisites In order to utilize Airgapped Docs, you will need the following prerequisites: Rancher v2.7.0 or higher: https://ranchermanager.docs.rancher.com/integrations-in-rancher/rancher-extensionsHelm: https://helm.sh/docs/intro/installAccess to the downstream cluster(s), to be able to install and deploy the app(s). It is also assumed you have followed all of the Carbide Secured Registry (CSR) documentation. This means you have: seeded your registry with the images from the CSRthe carbide helm charts available for useconfigured k3s/rke2 to use your registryconfigured Rancher Manager to use your registrysetup policy enforcement to only allow images from the CSR","keywords":"","version":"Next"},{"title":"Installation","type":0,"sectionRef":"#","url":"/carbide-docs/docs/airgapped-docs/installation","content":"","keywords":"","version":"Next"},{"title":"Downstream Clusters​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/airgapped-docs/installation#downstream-clusters","content":" Run the following Helm command to install Airgapped Docs chart, substituting your registry in:  helm install -n carbide-docs-system --create-namespace \\ --set &quot;global.cattle.systemDefaultRegistry=&lt;registry-url&gt;&quot; \\ airgapped-docs carbide-charts/airgapped-docs   Check the status of the rollout:  helm status -n carbide-docs-system airgapped-docs   You should now see Airgapped Docs on the left menu of your Explore Cluster.  ","version":"Next","tagName":"h2"},{"title":"Selecting Documentation for Low-Compute Environments​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/airgapped-docs/installation#selecting-documentation-for-low-compute-environments","content":" There may be situations where you are running in a low-compute, low-resource environment or are not using specific products and do not want to utilize specific documentation from Airgapped Docs. For those situations, you can disable specific products during installation, such as:  # Disable neuvector docs helm install -n carbide-docs-system --create-namespace \\ --set &quot;global.cattle.systemDefaultRegistry=&lt;registry-url&gt;&quot; \\ --set &quot;docs.neuvector.enabled=false&quot; \\ airgapped-docs carbide-charts/airgapped-docs   For a full list of products that can be disabled, see here. ","version":"Next","tagName":"h2"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/carbide-docs/docs/airgapped-docs/introduction","content":"","keywords":"","version":"Next"},{"title":"What's included?​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/airgapped-docs/introduction#whats-included","content":" When in an airgap, having accessibility to documentation can be critical to mission success, especially while troubleshooting problems.  Carbide Airgapped Docs will give users access to documentation for not only Carbide itself, but the entire supported Rancher product porfolio. This includes capabililites like query and copy/paste shortcuts.  ","version":"Next","tagName":"h2"},{"title":"IOC Expectations​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/airgapped-docs/introduction#ioc-expectations","content":" As our product is still at Initial Operation Capability (IOC), there are some expectations to level-set:  Installation and packaging is still in progress and improving.  If you see issues and areas for improvement, please submit Github issues here. ","version":"Next","tagName":"h2"},{"title":"AppCo Portal","type":0,"sectionRef":"#","url":"/carbide-docs/docs/app-collection-docs/appco-portal","content":"AppCo Portal The RGS Application Collection can be browsed in a new tab of the Carbide Portal, under Applications. You can filter by application category and type to find what you're looking for. When you select an application, you can download Hauler bundles, view the images the app is comprised of, and select different chart versions. The lefthand dropdown allows you to select the desired version of the application. The document icon next to the application name takes you to the upstream project information, such as documentation and source code. Additionally, some apps have related components that can installed. Click on the component to see it's information and artifacts.","keywords":"","version":"Next"},{"title":"Uninstall","type":0,"sectionRef":"#","url":"/carbide-docs/docs/airgapped-docs/uninstall","content":"","keywords":"","version":"Next"},{"title":"Downstream Clusters​","type":1,"pageTitle":"Uninstall","url":"/carbide-docs/docs/airgapped-docs/uninstall#downstream-clusters","content":" On each downstream cluster, run the following command to uninstall Airgapped Docs:  helm uninstall -n carbide-docs-system airgapped-docs  ","version":"Next","tagName":"h2"},{"title":"Glossary","type":0,"sectionRef":"#","url":"/carbide-docs/docs/app-collection-docs/glossary","content":"","keywords":"","version":"Next"},{"title":"Application​","type":1,"pageTitle":"Glossary","url":"/carbide-docs/docs/app-collection-docs/glossary#application","content":" An application is a product that users can install into their environments. This is the main component of the collection.  An application can be a database, an API gateway, a load balancer, a runtime, etc. Most applications are cloud-native, but there are also containerized applications for specific purposes. For example, Argo CD (cloud-native application) or Git (containerized application).  Depending on the application type, it will be installed either as a Helm Chart (for apps comprised of multiple containers) or as a Single Container. Some Single Container apps may have multiple flavors of the image to choose from, such as -dev images.  ","version":"Next","tagName":"h3"},{"title":"Artifact​","type":1,"pageTitle":"Glossary","url":"/carbide-docs/docs/app-collection-docs/glossary#artifact","content":" An artifact is the result of packaging the binaries of a component into a distributable unit.  There are 2 main artifact packaging formats:  Container Image: bundles the component binaries for a given version and flavor, on top of a base OS and architectureHelm Chart: contains pointers to the set of container images needed to run a specific application version and flavor  Artifacts are continuously built, and updated through revisions.  ","version":"Next","tagName":"h3"},{"title":"Branch​","type":1,"pageTitle":"Glossary","url":"/carbide-docs/docs/app-collection-docs/glossary#branch","content":" A branch is a set of versions where backwards compatibility is expected. Each component follows its own branching strategy, as defined in the upstream project. It is assumed that the upstream project follows semantic versioning.  ","version":"Next","tagName":"h3"},{"title":"Component​","type":1,"pageTitle":"Glossary","url":"/carbide-docs/docs/app-collection-docs/glossary#component","content":" A component is an identifiable part of an application that provides a clear interface with other parts. It is common in modern software applications to have several components, such as a relational database or a secret manager. In Application Collection, these applications are described using Helm. Depending on the complexity of the application, there may be required and/or optional components. ","version":"Next","tagName":"h3"},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/carbide-docs/docs/app-collection-docs/getting-started","content":"","keywords":"","version":"Next"},{"title":"Using the Carbide Secured Registry (CSR)​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/app-collection-docs/getting-started#using-the-carbide-secured-registry-csr","content":" As with the other products in the Carbide Suite, you can pull artifacts from the Carbide Secured Regsitry to seed your private registry. This can be done in both connected and airgapped environments.  Please ensure you have the Prerequisites and follow the Seeding a Registry steps.  Note: Using the following hauler store sync commands, Hauler will automatically pull both the helm chart and the images required for the application. The hauler store copy function will copy helm charts into a /charts folder and container images into /containers.  Copy Images in a Connected Environment using Hauler​  Sync app:  hauler store sync --store application-store --products apps-&lt;application-name&gt;=0.28.1 --key carbide-key.pub --platform &lt;platform/arch&gt;   Copy to registry:  hauler store copy --store application-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   Transfer Images to an Airgapped Environment using Hauler​  In your connected environment, download the artifacts:  hauler store sync --store application-store --products apps-&lt;application-name&gt;=0.28.1 --key carbide-key.pub --platform &lt;platform/arch&gt; hauler store save --store application-store ---filename application.tar.zst   In the airgap, load images and copy to your registry:  hauler store load --store application-store application.tar.zst hauler store copy --store application-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;  ","version":"Next","tagName":"h3"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/carbide-docs/docs/app-collection-docs/introduction","content":"","keywords":"","version":"Next"},{"title":"What is the RGS Application Collection?​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/app-collection-docs/introduction#what-is-the-rgs-application-collection","content":" The RGS Application Collection (AppCo) offers a curated, trusted, and up-to-date set of developer and infrastructure applications that are production-ready. This collection of open source applications is rebuilt on the SUSE Linux Enterprise Base Container Image (SLE BCI), which reduces attack surface and dependency vulnerabilities.  RGS Application Collection is updated often to ensure you have the latest application versions available and dependency bumps are done frequently. We also scan regularly so you have updated vulnerability data available.    ","version":"Next","tagName":"h3"},{"title":"What's the difference between the RGS Application Collection and SUSE App Collection?​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/app-collection-docs/introduction#whats-the-difference-between-the-rgs-application-collection-and-suse-app-collection","content":" The RGS Application Collection offers the same rebuilt application images as SUSE. However, while the applications are the same, RGS AppCo metadata is different. The images are delivered via the Carbide Secured Registry, with SLSA L3 pipelines, SBOM generation, vulnerability scans, and cryptographically verifiable artifacts. RGS AppCo is also available on the Carbide Portal and integrated with Hauler for easy air-gapping.  ","version":"Next","tagName":"h3"},{"title":"How can I access the collection?​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/app-collection-docs/introduction#how-can-i-access-the-collection","content":" Your current license will automatically grant you access to these artifacts. If you're having trouble accessing the collection, or if you aren't yet a Carbide customer but are interested in trying it out, please contact sales.  Check out the guide to get started! ","version":"Next","tagName":"h3"},{"title":"Feedback","type":0,"sectionRef":"#","url":"/carbide-docs/docs/feedback","content":"Feedback Feedback is critical to us to continue to improve our tools and help you with your mission. For any issues, concerns, or questions, please open an issue: https://github.com/rancherfederal/carbide-docs/issues","keywords":"","version":"Next"},{"title":"Installation","type":0,"sectionRef":"#","url":"/carbide-docs/docs/IC-cloud-support-docs/installation","content":"","keywords":"","version":"Next"},{"title":"Bundle Artifacts in Connected Environment​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/IC-cloud-support-docs/installation#bundle-artifacts-in-connected-environment","content":" In a connected environment, utilize the Hauler CLI to verify and collect the Rancher Government images and helm chart from the Carbide Secured Registry.  Download the public key for Carbide. curl -sfL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub -o /tmp/carbide-key.pub Login into the Carbide registry with your Carbide Credentials, then validate and fetch the images to the local Hauler store. Add the Rancher helm chart to your store, and save store as a tarball. hauler login rgcrprod.azurecr.us -u &lt;redacted&gt; -p &lt;redacted&gt; hauler store sync --products rancher-government=v2.10.3 --key carbide-key.pub hauler store add chart rancher --repo https://rancherfederal.github.io/carbide-charts --version 2.10.3 hauler store save --filename rancher-govt.tar.zst Move the resulting rancher-govt.tar.zst file into your airgapped/classified environment.  ","version":"Next","tagName":"h2"},{"title":"Copy Files to Your Classified Registry​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/IC-cloud-support-docs/installation#copy-files-to-your-classified-registry","content":" Copy the rancher-govt.tar.zst and the Hauler binary to a server in your airgapped/classified environment. Please ensure Hauler is added to your PATH. Log in to your registry, load the bundle to the local store, and copy the images to your registry. hauler login &lt;registry-url&gt; -u &lt;redacted&gt; -p &lt;redacted&gt; hauler store load rancher-govt.tar.zst hauler store copy registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h2"},{"title":"Rancher Government Helm Chart​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/IC-cloud-support-docs/installation#rancher-government-helm-chart","content":" Add and update the helm repository. helm repo add carbide-charts https://rancherfederal.github.io/carbide-charts helm repo update carbide-charts Update the values for your environment and set the rancherImageTag with the -carbide-* tag. helm install rancher carbide-charts/rancher \\ --namespace cattle-system \\ --set hostname=&lt;rancher.my.org&gt; \\ --set bootstrapPassword=admin \\ --set rancherImageTag=v2.10.3-carbide-1 \\ --set carbide.whitelabel.enabled=false \\ --version=v2.10.3   ","version":"Next","tagName":"h2"},{"title":"Upgrade Your Rancher Installation​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/IC-cloud-support-docs/installation#upgrade-your-rancher-installation","content":" Add and update the helm repository. helm repo add carbide-charts https://rancherfederal.github.io/carbide-charts helm repo update carbide-charts Get existing values. helm get values -n cattle-system rancher &gt; /tmp/values.yaml Update values for your environment and set rancherImageTag with the -carbide-* tag. helm upgrade rancher carbide-charts/rancher \\ --namespace cattle-system \\ -f /tmp/values.yaml \\ --set rancherImageTag=v2.10.3-carbide-1 \\ --set carbide.whitelabel.enabled=false \\ --version=v2.10.3   For more information about airgapped installation of Rancher, see the docs here. ","version":"Next","tagName":"h2"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/carbide-docs/docs/IC-cloud-support-docs/introduction","content":"","keywords":"","version":"Next"},{"title":"What does this mean?​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/IC-cloud-support-docs/introduction#what-does-this-mean","content":" Rancher Government enables Carbide customers to use the Rancher Manager User Interface (UI), a Helm Chart, and/or Fleet (GitOps) to deploy, provision, and manage RKE2 and K3S clusters in IC cloud regions. The tech preview currently supports AWS EC2 Instances, in classified region C2S.  Rancher Government Solutions actively tests and validates this configuration through regions in AWS GovCloud and Sequoia Combine (Classified Cloud Region Emulator).  By supporting the provisioning of clusters onto the same AWS account that Rancher is running in, Day 2 Operations such as identity and access management (IAM) are greatly simplified. This allows for a seamless experience in any environment.  ","version":"Next","tagName":"h2"},{"title":"Challenges​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/IC-cloud-support-docs/introduction#challenges","content":" At a high level, the IC Cloud Regions introduce significant complexities and challenges to deploy, provision, manage, and maintain infrastructure.  Temporary Credentials: Short Lived Credentials, typically valid for less than an hour (STS Tokens)Additional Requirements: such as providing CA Bundles, HTTP Proxies, etc…Controlled Security Access: Limited IAM Roles/Policies/Permissions and IAM Permission BoundariesLimited Service Availability: Subset of AWS Services are available and have limited featuresUnique Regions and Service Endpoints: Regions and Service Endpoints are unique per environmentSeparation of Duties: Unknown requirements and each customer imposes various changes to the above list of challenges and require human in the loop procedures and processes  Rancher Government reduces these complexities by utilizing assumed IAM roles, providing compatibility with tools such as load balancers and EBS volumes, and enhancing Day 2 operations for managing your Kubernetes infrastructure.  ","version":"Next","tagName":"h2"},{"title":"Comparing Imported & Rancher-Provisioned Clusters​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/IC-cloud-support-docs/introduction#comparing-imported--rancher-provisioned-clusters","content":" Utilizing Rancher provisioning in IC Cloud Regions allows you to take advantage of additional cluster management features.  Feature/Functionality\tImported Cluster\tRancher-Provisioned ClusterCluster Access with kubectl or kubeconfig\t✓\t✓ Cluster Access Management (RBAC)\t✓\t✓ Managing Projects, Namespaces, &amp; Workloads\t✓\t✓ Managing Persistent Volumes &amp; Storage Classes\t✓\t✓ Use of Rancher App Catalog(s)\t✓\t✓ Configuring Infrastructure Tools (Monitoring, Logging, Istio, etc.)\t✓\t✓ Managing &amp; Running Security Scans\t✓\t✓ Modifying Cluster Configuration ✓ Automated Cluster Kubernetes Version Upgrades ✓ Cluster Node Management (Adding/Removing/Scaling) ✓ Cluster Node Access via Shell (SSH) ✓ Automated Cluster Certificate Rotation ✓ Automated Cluster Encryption Key Rotation ✓ Ability to Snapshot, Backup, &amp; Restore ✓ Configuring PSS/PSA/PSP ✓  ","version":"Next","tagName":"h2"},{"title":"Future State​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/IC-cloud-support-docs/introduction#future-state","content":" As Rancher Government Solutions works towards general availability (GA) of IC Cloud Support, we seek to achieve parity between commercial and IC cloud regions. We plan to augment the current state in the following ways:  Principle of Least Privileged Access: Pod Level Permissions vs Node Level PermissionsReducing Implementation/Migration Burden: Utilizing Rancher Manager UI Extensions (i.e STIGATRON)Additional Functionality: Carbide Provisioning for all supported drivers (i.e. AWS EKS)  If you have additional feedback, please submit issues to our GitHub or contact support. ","version":"Next","tagName":"h2"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/carbide-docs/docs/intro","content":"Introduction Carbide is Rancher Government's hardened distribution of the SUSE Rancher product portfolio. Carbide is exclusively offered to our US Government and partnering customers that value security above all else. Rancher Carbide is tactically built with the following enhancements over the community version: SLSA 3 compliant secure build process hosted on Azure GovernmentDigitally Signed Container Images. Every container hosted in our registry has been digitally signed by Rancher Government Solutions. Verifiable trust is baked into everything we do.Software Bill of Materials (SBOM) support in every container imageContainer AttestationsContainer Vulnerability ScansAuthenticated Registry hosted on Azure Government Container RegistrySTIGATRON: Day 2 security operator powered by Rancher Government's DISA STIGsAirgapped Docs: Fully airgapped-supportive documentation for the entire supported Rancher product portfolioCustom red-white-blue theming &amp; Rancher manager white-labeling We are honored to serve your mission.","keywords":"","version":"Next"},{"title":"Known Limitations & Caveats","type":0,"sectionRef":"#","url":"/carbide-docs/docs/known-limits","content":"","keywords":"","version":"Next"},{"title":"Rancher Managing Cloud-Hosted Kubernetes​","type":1,"pageTitle":"Known Limitations & Caveats","url":"/carbide-docs/docs/known-limits#rancher-managing-cloud-hosted-kubernetes","content":" Currently, Rancher managing Cloud-Hosted Kubernetes (EKS, AKS, GKE, etc.) does not support private, secured registries for the agent that gets installed onto EKS for Rancher to manage it.Rancher Cluster Manager currently does not support managing Cloud-Hosted solutions in an airgap, to include serving images from a private registry.If you are managing Cloud-Hosted Kubernetes from Rancher in any capacity, do not update your Rancher's systemDefaultRegistry to point to a private registry holding the securing images. It will break Rancher's ability to manage those downstream clusters. ","version":"Next","tagName":"h3"},{"title":"Provisioning Clusters","type":0,"sectionRef":"#","url":"/carbide-docs/docs/IC-cloud-support-docs/usage","content":"","keywords":"","version":"Next"},{"title":"Creating a Carbide Cloud Credential​","type":1,"pageTitle":"Provisioning Clusters","url":"/carbide-docs/docs/IC-cloud-support-docs/usage#creating-a-carbide-cloud-credential","content":" In the Rancher Mananger menu, access Cloud Credentials (Cluster Management -&gt; Cloud Credentials). Select Create and choose Amazon. Choose a name, click the toggle to enable the Carbide Instance Credential, select the default region for your environment, and click Create.  ","version":"Next","tagName":"h2"},{"title":"Creating a Classified Cluster​","type":1,"pageTitle":"Provisioning Clusters","url":"/carbide-docs/docs/IC-cloud-support-docs/usage#creating-a-classified-cluster","content":" In the Rancher Manager menu, access Cluster Management and click Create. Ensure the RKE2/K3s toggle is enabled and select Amazon EC2. Select the Cloud Credentials created in the previous step, then add node pools as you normally would for provisioning a cluster from Rancher. PLEASE NOTE, in C2S: It is required for you to enter an AMI ID and the respective SSH User for that AMI ID under the Advanced settings. Not all Instance Types are available. Ensure you are leverage an Instance Type that is available in your environment. This list will be dynamic in the future. Encrypted EBS volumes are required. Ensure you select the Encrypt EBS Volumes and choose a respective KMS key when provisioning. If no security group is provided, Rancher will attempt to create a Security Group. If the ability to create Security Groups is limited, have a Security Group created by your Account Manager/Broker that has the appropriate port configuration and select that existing Security Group in the Advanced settings. For more information on provisioning an RKE2/K3s cluster on Amazon EC2s, see the Rancher docs.  ","version":"Next","tagName":"h2"},{"title":"Registry Configuration​","type":1,"pageTitle":"Provisioning Clusters","url":"/carbide-docs/docs/IC-cloud-support-docs/usage#registry-configuration","content":" When using a private registry, downstream clusters must be configured with correct authentication and certificate information to access that registry via the registries.yaml file. Rancher provisioned clusters can be configured through the UI to generate the registries.yaml file.  Under the Cluster Configuration section when provisioning a cluster, select the Registries section. Enter the registry domain in the Container Registry box, and either select existing registry credentials or create new credentials for authentication to the registry. If advanced configuration (mirroring, certificates, additional authentication) is required, add those to the advanced settings.  For more information, see the RKE2 Containerd Registry Configuration documentation. ","version":"Next","tagName":"h3"},{"title":"Architecture","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/architecture","content":"","keywords":"","version":"Next"},{"title":"Pipeline Architecture​","type":1,"pageTitle":"Architecture","url":"/carbide-docs/docs/registry-docs/architecture#pipeline-architecture","content":"   ","version":"Next","tagName":"h2"},{"title":"Usage Architecture​","type":1,"pageTitle":"Architecture","url":"/carbide-docs/docs/registry-docs/architecture#usage-architecture","content":"  ","version":"Next","tagName":"h2"},{"title":"Carbide Helm Charts","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/carbide-charts","content":"","keywords":"","version":"Next"},{"title":"Obtaining Chart Manifests​","type":1,"pageTitle":"Carbide Helm Charts","url":"/carbide-docs/docs/registry-docs/carbide-charts#obtaining-chart-manifests","content":" ","version":"Next","tagName":"h2"},{"title":"Connected Environments​","type":1,"pageTitle":"Carbide Helm Charts","url":"/carbide-docs/docs/registry-docs/carbide-charts#connected-environments","content":" Add and update the helm chart repository:  helm repo add carbide-charts https://rancherfederal.github.io/carbide-charts helm repo update   View the charts in the helm chart repository:  helm search repo carbide-charts   Example install of a helm chart:  helm install &lt;release-name&gt; carbide-charts/&lt;chart&gt;   If you would like to add the Carbide Helm Charts to the Rancher Chart Catalog (so you can use the user interface to install them) please follow the steps in the Rancher Docs.  ","version":"Next","tagName":"h3"},{"title":"Airgapped Environments​","type":1,"pageTitle":"Carbide Helm Charts","url":"/carbide-docs/docs/registry-docs/carbide-charts#airgapped-environments","content":" In Connected Environment​  Generate the Hauler manfiest for the Carbide Helm Charts:  cat &lt;&lt;EOF &gt; carbide-charts.yaml apiVersion: content.hauler.cattle.io/v1 kind: Charts metadata: name: carbide-charts spec: charts: - name: rancher repoURL: https://rancherfederal.github.io/carbide-charts version: 2.8.3 - name: airgapped-docs repoURL: https://rancherfederal.github.io/carbide-charts version: 0.1.49 - name: stigatron repoURL: https://rancherfederal.github.io/carbide-charts version: 0.2.5 - name: stigatron-ui repoURL: https://rancherfederal.github.io/carbide-charts version: 0.2.3 --- apiVersion: content.hauler.cattle.io/v1 kind: Charts metadata: name: carbide-dependency-charts spec: charts: - name: heimdall2 repoURL: https://rancherfederal.github.io/carbide-charts version: 0.1.45 - name: nats repoURL: https://nats-io.github.io/k8s/helm/charts version: 1.1.5 EOF   Fetch the content from generated Hauler manifest and verify the version and the platform/architecture:  hauler store sync --store carbide-store --files carbide-charts.yaml --platform &lt;platform/arch&gt;   Save and output the content from the Hauler store to tarball:  hauler store save --store carbide-store --filename carbide-charts.tar.zst   In Airgapped Environment​  Load the content from the tarball to the Hauler store:  hauler store load --store carbide-store carbide-charts.tar.zst   Serve the content from the Hauler store:  hauler store serve fileserver --store carbide-store   Example install of a helm chart:  helm install &lt;release-name&gt; http://&lt;FQDN or IP&gt;:&lt;PORT&gt;/&lt;chart&gt;.tgz  ","version":"Next","tagName":"h3"},{"title":"Prerequisites","type":0,"sectionRef":"#","url":"/carbide-docs/docs/IC-cloud-support-docs/prereqs","content":"","keywords":"","version":"Next"},{"title":"Tools​","type":1,"pageTitle":"Prerequisites","url":"/carbide-docs/docs/IC-cloud-support-docs/prereqs#tools","content":" The following tools are required to install/upgrade Rancher Government.  Hauler, or DockerHelmRancher Government (v2.10.3, v2.9.7, v2.8.13 or greater)  NOTE: This feature is only availabe in the Rancher Government product. Carbide customers can download the required artifacts from the Carbide Portal or the Carbide Secured Regsitry.    ","version":"Next","tagName":"h2"},{"title":"IAM Role & Instance Profile​","type":1,"pageTitle":"Prerequisites","url":"/carbide-docs/docs/IC-cloud-support-docs/prereqs#iam-role--instance-profile","content":" The Amazon EC2 provisioner requires a certain amount of access to read, write, and delete some AWS resources. Enabling these sans principal credentials (i.e. access key and secret key) requires an EC2 Instance Profile, associated with an IAM Role, for each node in the Rancher management cluster, with the following policy:  { &quot;Version&quot;: &quot;2012-10-17&quot;, &quot;Statement&quot;: [ { &quot;Sid&quot;: &quot;RancherAWSEC2Permissions&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;ec2:AuthorizeSecurityGroupIngress&quot;, &quot;ec2:Describe*&quot;, &quot;ec2:ImportKeyPair&quot;, &quot;ec2:CreateKeyPair&quot;, &quot;ec2:CreateSecurityGroup&quot;, &quot;ec2:CreateTags&quot;, &quot;ec2:DeleteKeyPair&quot;, &quot;ec2:ModifyInstanceMetadataOptions&quot; ], &quot;Resource&quot;: &quot;*&quot; }, { &quot;Sid&quot;: &quot;RancherAWSKMSPermissions&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;kms:Decrypt&quot;, &quot;kms:GenerateDataKeyWithoutPlaintext&quot;, &quot;kms:Encrypt&quot;, &quot;kms:DescribeKey&quot;, &quot;kms:CreateGrant&quot;, &quot;ec2:DetachVolume&quot;, &quot;ec2:AttachVolume&quot;, &quot;ec2:DeleteSnapshot&quot;, &quot;ec2:DeleteTags&quot;, &quot;ec2:CreateTags&quot;, &quot;ec2:CreateVolume&quot;, &quot;ec2:DeleteVolume&quot;, &quot;ec2:CreateSnapshot&quot; ], &quot;Resource&quot;: [ &quot;arn:aws:ec2:AWS_REGION_PLACEHOLDER:AWS_ACCOUNT_ID_PLACEHOLDER:volume/*&quot;, &quot;arn:aws:ec2:AWS_REGION_PLACEHOLDER:AWS_ACCOUNT_ID_PLACEHOLDER:instance/*&quot;, &quot;arn:aws:ec2:AWS_REGION_PLACEHOLDER':AWS_ACCOUNT_ID_PLACEHOLDER:snapshot/*&quot;, &quot;arn:aws:kms:AWS_REGION_PLACEHOLDER':AWS_ACCOUNT_ID_PLACEHOLDER:key/*&quot; ] }, { &quot;Sid&quot;: &quot;RancherAWSPassRolePermissions&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;iam:PassRole&quot;, &quot;ec2:RunInstances&quot;, &quot;ec2:DetachVolume&quot;, &quot;ec2:AttachVolume&quot;, &quot;ec2:DeleteSnapshot&quot;, &quot;ec2:DeleteTags&quot;, &quot;ec2:CreateTags&quot;, &quot;ec2:CreateVolume&quot;, &quot;ec2:DeleteVolume&quot;, &quot;ec2:CreateSnapshot&quot; ], &quot;Resource&quot;: [ &quot;arn:aws:ec2:AWS_REGION_PLACEHOLDER::image/ami-*&quot;, &quot;arn:aws:ec2:AWS_REGION_PLACEHOLDER:AWS_ACCOUNT_ID_PLACEHOLDER:instance/*&quot;, &quot;arn:aws:ec2:AWS_REGION_PLACEHOLDER:AWS_ACCOUNT_ID_PLACEHOLDER:placement-group/*&quot;, &quot;arn:aws:ec2:AWS_REGION_PLACEHOLDER:AWS_ACCOUNT_ID_PLACEHOLDER:volume/*&quot;, &quot;arn:aws:ec2:AWS_REGION_PLACEHOLDER:AWS_ACCOUNT_ID_PLACEHOLDER:subnet/*&quot;, &quot;arn:aws:ec2:AWS_REGION_PLACEHOLDER:AWS_ACCOUNT_ID_PLACEHOLDER:key-pair/*&quot;, &quot;arn:aws:ec2:AWS_REGION_PLACEHOLDER:AWS_ACCOUNT_ID_PLACEHOLDER:network-interface/*&quot;, &quot;arn:aws:ec2:AWS_REGION_PLACEHOLDER:AWS_ACCOUNT_ID_PLACEHOLDER:security-group/*&quot;, &quot;arn:aws:iam::AWS_ACCOUNT_ID_PLACEHOLDER:role/*&quot; ] }, { &quot;Sid&quot;: &quot;RancherAWSEC2ScopedPermissions&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;ec2:RebootInstances&quot;, &quot;ec2:TerminateInstances&quot;, &quot;ec2:StartInstances&quot;, &quot;ec2:StopInstances&quot; ], &quot;Resource&quot;: &quot;arn:aws:ec2:AWS_REGION_PLACEHOLDER:AWS_ACCOUNT_ID_PLACEHOLDER:instance/*&quot; } ] }     ","version":"Next","tagName":"h2"},{"title":"Rancher Manager Configurations​","type":1,"pageTitle":"Prerequisites","url":"/carbide-docs/docs/IC-cloud-support-docs/prereqs#rancher-manager-configurations","content":" Rancher Manager needs to be configured with the following values to support full airgapped deployments as well as your custom certificates and certificate authority (CA).  ","version":"Next","tagName":"h2"},{"title":"Helm Values​","type":1,"pageTitle":"Prerequisites","url":"/carbide-docs/docs/IC-cloud-support-docs/prereqs#helm-values","content":" Configure the follow Helm values for your Rancher helm deployment, adjusting the rancher-url and registry-url for your specific environment.  additionalTrustedCAs: true hostname: &lt;rancher-url&gt; ingress: tls: source: secret rancherImage: &lt;registry-url&gt;/rancher/rancher rancherImageTag: v2.10.3-govt-1 systemDefaultRegistry: &lt;registry-url&gt; useBundledSystemChart: true privateCA: true   ","version":"Next","tagName":"h3"},{"title":"Custom CA Certificate Secret​","type":1,"pageTitle":"Prerequisites","url":"/carbide-docs/docs/IC-cloud-support-docs/prereqs#custom-ca-certificate-secret","content":" For Rancher to make requests to the Classified AWS endpoints, you need to create a secret containing the AWS CA of your specific environment.  apiVersion: v1 kind: Secret metadata: name: tls-ca-additional namespace: cattle-system data: ca-additional.pem: &lt;encodedPrivateBundle&gt; type: Opaque   NOTE: Ensure this secret matches the name and namespace above.  ","version":"Next","tagName":"h3"},{"title":"Registry Configuration​","type":1,"pageTitle":"Prerequisites","url":"/carbide-docs/docs/IC-cloud-support-docs/prereqs#registry-configuration","content":" You need to configure your Kubernetes cluster to utilize your private registry. Configure the registries.yaml file in your RKE2/K3s configuration directories with the following:  mirrors: &quot;*&quot;: endpoint: - &quot;https://&lt;registry-url&gt;&quot; configs: &quot;&lt;registry-url&gt;&quot;: auth: username: &lt;redacted&gt; password: &lt;redacted&gt;   For more information on registry configuration, check out the RKE2 docs here.  For more detailed information about Air-Gapped Rancher, check out the Rancher docs here. ","version":"Next","tagName":"h3"},{"title":"Rancher Configuration","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/configuration/rancher","content":"","keywords":"","version":"Next"},{"title":"Compatibility Matrix​","type":1,"pageTitle":"Rancher Configuration","url":"/carbide-docs/docs/registry-docs/configuration/rancher#compatibility-matrix","content":" Infra\tProvisioner\tRegistry Auth Strategy\tTest StatusAny\tRancher (Cloud Provisioner)\tGlobal Registry (Rancher)\tValidated Any\tRancher (Custom Provisioner)\tAuthenticated Registry (Manual registries.yaml)\tValidated Any\tSelf Installation\tGlobal Registry (Rancher)\tValidated Any\tImported Cluster\tUnknown AWS-EKS\tRancher\tECR (public or private)\t  ","version":"Next","tagName":"h2"},{"title":"Preliminary Setup​","type":1,"pageTitle":"Rancher Configuration","url":"/carbide-docs/docs/registry-docs/configuration/rancher#preliminary-setup","content":" As Rancher has a dependency on Cert Manager, you'll need to update/install Cert Manager with the images provided by the CSR.  If you're following Rancher's connected installation instructions, you'll need to follow the steps below to use the Carbide Secured Registry (CSR) images for cert-manager.  If using the airgapped installation instructions, make sure you've pulled the images to your local/airgapped registry.  ","version":"Next","tagName":"h2"},{"title":"Configuring Cert Manager​","type":1,"pageTitle":"Rancher Configuration","url":"/carbide-docs/docs/registry-docs/configuration/rancher#configuring-cert-manager","content":" Follow Rancher's connected installation instructions, but using the following steps instead of the helm install command from the docs.  After adding the Cert Manager repo and installing the CRDs, use the following to create a temporary values.yaml for your chart, subsituting your registry domain:  cat &lt;&lt;EOT &gt; /tmp/values.yaml image: registry: &lt;registry-url&gt; repository: jetstack/cert-manager-controller webhook: image: registry: &lt;registry-url&gt; repository: jetstack/cert-manager-webhook cainjector: image: registry: &lt;registry-url&gt; repository: jetstack/cert-manager-cainjector startupapicheck: image: registry: &lt;registry-url&gt; repository: jetstack/cert-manager-startupapicheck acmesolver: image: registry: &lt;registry-url&gt; repository: jetstack/cert-manager-acmesolver EOT   Then use the following helm install command to use the images:  helm install cert-manager jetstack/cert-manager \\ --namespace cert-manager \\ --create-namespace \\ --version v1.14.4 \\ -f /tmp/values.yaml   ","version":"Next","tagName":"h3"},{"title":"Registry Auth Strategies​","type":1,"pageTitle":"Rancher Configuration","url":"/carbide-docs/docs/registry-docs/configuration/rancher#registry-auth-strategies","content":" ","version":"Next","tagName":"h2"},{"title":"Global Registry (Rancher)​","type":1,"pageTitle":"Rancher Configuration","url":"/carbide-docs/docs/registry-docs/configuration/rancher#global-registry-rancher","content":" Existing Rancher Installations​  Setting a Private Registry with No Credentials as the Default Registry​  Log into Rancher and configure the default administrator password.Click ☰ &gt; Global Settings.Go to the setting called system-default-registry and choose ⋮ &gt; Edit Setting.Change the value to your registry (e.g. registry.yourdomain.com:port). Do not prefix the registry with http:// or https://.  Result: Rancher will use your private registry to pull system images.  Setting a Private Registry with Credentials when Deploying a Cluster​  You can follow these steps to configure a private registry when you create a cluster:  Click ☰ &gt; Cluster Management.On the Clusters page, click Create.Choose a cluster type.In the Cluster Configuration go to the Registries tab and select Pull images for Rancher from a private registry.Enter the registry hostname and credentials.Click Create.  Result: The new cluster will be able to pull images from the private registry.  New Rancher Installations​  Follow Rancher's Installation Guide, making sure to use the Carbide chart obtained in the previous helm chart section.  When installing Rancher, to utilize the private registry, you'll need to set the following values in your helm values:  helm install rancher carbide-charts/rancher \\ --namespace cattle-system \\ --set hostname=rancher.my.org \\ --set replicas=3 \\ --set rancherImage=&lt;registry-url&gt;/rancher/rancher --set systemDefaultRegistry=&lt;registry-url&gt;   NOTE: This requires configuring RKE2/K3s registries.yaml to work. See the RKE2/K3s configuration section for more details.  ","version":"Next","tagName":"h3"},{"title":"Authenticated Registry (Manual registries.yaml)​","type":1,"pageTitle":"Rancher Configuration","url":"/carbide-docs/docs/registry-docs/configuration/rancher#authenticated-registry-manual-registriesyaml","content":" See the RKE2/K3s configuration section for more details. ","version":"Next","tagName":"h3"},{"title":"RKE2/k3s Configuration","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/configuration/kubernetes","content":"","keywords":"","version":"Next"},{"title":"Usage with k3s​","type":1,"pageTitle":"RKE2/k3s Configuration","url":"/carbide-docs/docs/registry-docs/configuration/kubernetes#usage-with-k3s","content":" To modify the system images that k3s uses upon bootstrapping, configure k3s' mirror settings as described here.  Set the mirrors in the /etc/rancher/k3s/registries.yaml file. A full example configuration using an authenticated registry is below:  mirrors: docker.io: endpoint: - &quot;https://&lt;registry-url&gt;&quot; configs: &quot;&lt;registry-url&gt;&quot;: auth: username: &lt;redacted&gt; password: &lt;redacted&gt;   You will also need to utilize the system-default-registry flag when installing k3s to ensure it uses the registry. For instance:  curl -sfL https://get.k3s.io | sh -s - --system-default-registry=&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Usage with RKE2​","type":1,"pageTitle":"RKE2/k3s Configuration","url":"/carbide-docs/docs/registry-docs/configuration/kubernetes#usage-with-rke2","content":" Similar to k3s, the Carbide Secured Registry (CSR) images are pulled upon bootstrapping by configuring RKE2's mirroring configuration as described here.  Set the mirrors in the /etc/rancher/rke2/registries.yaml file. A full example configuration using an authenticated registry is below:  mirrors: docker.io: endpoint: - &quot;https://&lt;registry-url&gt;&quot; configs: &quot;&lt;registry-url&gt;&quot;: auth: username: &lt;redacted&gt; password: &lt;redacted&gt;   You will also need to utilize the system-default-registry flag when installing RKE2 to ensure it uses the registry. For instance, if using the configuration file /etc/rancher/rke2/config.yaml:  node-name: controlplane1 write-kubeconfig-mode: 0640 system-default-registry: &lt;registry-url&gt; ...   registries.yaml Strategy Approaches​  Scenario\tBest practiceUse of a 'golden machine image'\tPre-configure registries.yaml on golden machine image before host provisioning Rancher provisioned cluster\tEmbed a cloud-init file into cluster provisioning (example below) Ansible/Saltstack/Manual\tPre-configure registries.yaml on host before cluster provisioning  Example cloud-init (RKE2)​  runcmd: - mkdir /etc/rancher/rke2 write_files: - path: /etc/rancher/rke2/registries.yaml content: | mirrors: docker.io: endpoint: - &quot;https://&lt;registry-url&gt;&quot; configs: &quot;&lt;registry-url&gt;&quot;: auth: username: &lt;redacted&gt; password: &lt;redacted&gt; permissions: '0644'  ","version":"Next","tagName":"h3"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/introduction","content":"","keywords":"","version":"Next"},{"title":"What is the Carbide Secured Registry (CSR)?​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/registry-docs/introduction#what-is-the-carbide-secured-registry-csr","content":" At Rancher Government Solutions, we take the security of our products seriously. Products like RKE2 are tailor-built to address the &quot;secure by default&quot; needs of the federal government, while maintaining the ease of deployment that our users love from Rancher products.  The Carbide Secured Registry (CSR) uses a secure software supply chain to deliver these mission-critical products.  In comparison to upstream-hosted images from Docker Hub, CSR images come with the following enhancements:  Securely built on Rancher Government's internally hosted Secure Software FactoryDefined-as-code build and release process conforming to the DoD Reference Architecture and CNCF Best PracticesVerifiable build artifacts (images, SBOMs, and vulnerability reports) with signed, non-falsifiable provenance for core Rancher productsMeets the Linux Foundation's SLSA standards at the most secure level, SLSA L3.  The Carbide Secured Registry (CSR) will evolve with the standards and best practices around software supply chain security, so we can continue to deliver the highest levels of software security. If you see areas for improvement, please submit Github issues here.  DISCLAIMER: The Carbide Secured Registry (rgcrprod.azurecr.us) is not intended to be used as the primary registry for running Kubernetes clusters. It is only intended as the acquisition point to obtain the Carbide-secured images. Customers should seed their own private OCI registries, and use that registry for their Kubernetes clusters. ","version":"Next","tagName":"h3"},{"title":"Copying Images to a Registry","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/copying-images","content":"","keywords":"","version":"Next"},{"title":"Copying Secured Images​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#copying-secured-images","content":" The following steps are for pulling the multi-arch images. Please see the Hauler Docs for how to specify a specific platform.  If using the hauler store sync command from the Carbide portal, you may now select your platform in the UI and the --platform flag will be added to the command for you. If you wish to pull the multi-arch images instead, remove --platform from the command.  ","version":"Next","tagName":"h2"},{"title":"Carbide​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#carbide","content":" 1. Generate the Hauler manifest for Carbide.  The Hauler manifest is a yaml file which specifies the artifacts to fetch.  cat &lt;&lt;EOF &gt; carbide-images.yaml apiVersion: content.hauler.cattle.io/v1 kind: Images metadata: name: carbide-images spec: images: $(curl -sfL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-images.txt | sed '/nats/d' | sed 's/^/ - name: /') --- apiVersion: content.hauler.cattle.io/v1 kind: Images metadata: name: carbide-dependency-images spec: images: $(curl -sfL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-images.txt | sed '/rgcr/d' | sed 's/^/ - name: /') EOF   You can optionally set metadata such as platform specs and public keys in the manifest instead of through command line flags (not shown in this example). For more information on this, check out the Hauler Manifests guide.  2. Fetch the content from the Hauler manifest.  The hauler store sync command syncs the content specified in the manifest with the Hauler store, which can then be copied to your registry.  Setting --store allows you to specify the Hauler store, in this case, carbide-store. You may also specify the desired platform at this step with --platform.  hauler store sync --store carbide-store --files carbide-images.yaml --platform &lt;platform/arch&gt; --key carbide-key.pub   3. Copy the content from the Hauler store to your registry.  Hauler will copy the stored artifacts to your registry. Specify the username and password to your registry, followed by the URL.  If you named your store in the previous step, specify which store you'd like to copy.  hauler store copy --store carbide-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Rancher​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#rancher","content":" Carbide customers can also fetch collections from the CSR, which will pull all the required artifacts for a product into the Hauler store.  Installing Rancher requires Cert Manager, which can be pulled from the CSR as well.  1. Log in to the Carbide Secured Registry.  hauler login -u &lt;username&gt; -p &lt;password&gt; rgcrprod.azurecr.us   2. Sync Rancher to your Hauler store.  Specify the --products flag with your desired version.  hauler store sync --store rancher-store --products rancher=v2.8.3 --key carbide-key.pub --platform &lt;platform/arch&gt;   3. Copy the content from the Hauler store to your registry.  hauler store copy --store rancher-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Cert Manager​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#cert-manager","content":" Sync content:  hauler store sync --store certmanager-store --products cert-manager=v1.14.4 --key carbide-key.pub --platform &lt;platform/arch&gt;   Copy to registry:  hauler store copy --store certmanager-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"RKE2​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#rke2","content":" Sync content:  hauler store sync --store rke2-store --products rke2=v1.27.12+rke2r1 --key carbide-key.pub --platform &lt;platform/arch&gt;   Copy to registry:  hauler store copy --store rke2-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"K3s​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#k3s","content":" Sync content:  hauler store sync --store k3s-store --products k3s=v1.27.12-k3s1 --key carbide-key.pub --platform &lt;platform/arch&gt;   Copy to registry:  hauler store copy --store k3s-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Harvester​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#harvester","content":" Sync content:  hauler store sync --store harvester-store --products harvester=v1.4.1 --key carbide-key.pub --platform &lt;platform/arch&gt;   Copy to registry:  hauler store copy --store harvester-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Longhorn​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#longhorn","content":" Sync content:  hauler store sync --store longhorn-store --products longhorn=v1.6.1 --key carbide-key.pub --platform &lt;platform/arch&gt;   Copy to registry:  hauler store copy --store longhorn-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"NeuVector​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#neuvector","content":" Sync content:  hauler store sync --store neuvector-store --products neuvector=v5.3.2 --key carbide-key.pub --platform &lt;platform/arch&gt;   Copy to registry:  hauler store copy --store neuvector-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Kubewarden​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#kubewarden","content":" Sync content:  hauler store sync --store kubewarden-store --products kubewarden=kubewarden-controller-2.0.11 --key carbide-key.pub --platform &lt;platform/arch&gt;   Copy to registry:  hauler store copy --store kubewarden-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Application Collection​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#application-collection","content":" Sync app:  hauler store sync --store application-store --products apps-&lt;application-name&gt;=0.28.1 --key carbide-key.pub --platform &lt;platform/arch&gt;   Copy to registry:  hauler store copy --store application-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;  ","version":"Next","tagName":"h3"},{"title":"Downloading the Images","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/downloading-images","content":"","keywords":"","version":"Next"},{"title":"Downloading Secured Images​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#downloading-secured-images","content":" The following steps are for pulling the multi-arch images. Please see the Hauler Docs for how to specify a specific platform.  If using the hauler store sync command from the Carbide portal, you may now select your platform in the UI and the --platform flag will be added to the command for you. If you wish to pull the multi-arch images instead, remove --platform from the command.  ","version":"Next","tagName":"h2"},{"title":"Carbide​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#carbide","content":" 1. Generate the Hauler manifest for Carbide.  The Hauler manifest is a yaml file which specifies the artifacts to fetch.  cat &lt;&lt;EOF &gt; carbide-images.yaml apiVersion: content.hauler.cattle.io/v1 kind: Images metadata: name: carbide-images spec: images: $(curl -sfL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-images.txt | sed '/nats/d' | sed 's/^/ - name: /') --- apiVersion: content.hauler.cattle.io/v1 kind: Images metadata: name: carbide-dependency-images spec: images: $(curl -sfL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-images.txt | sed '/rgcr/d' | sed 's/^/ - name: /') EOF   You can optionally set metadata such as platform specs and public keys in the manifest instead of through command line flags (not shown in this example). For more information on this, check out the Hauler Manifests guide.  2. Fetch the content from the Hauler manifest.  The hauler store sync command syncs the content specified in the manifest with the Hauler store, which can then be copied to your registry.  Setting --store allows you to specify the Hauler store, in this case, carbide-store. You may also specify the desired platform at this step with --platform.  hauler store sync --store carbide-store --files carbide-images.yaml --platform &lt;platform/arch&gt; --key carbide-key.pub   3. Save and output the content from the Hauler store to a tarball.  If you named your store in the previous step, specify which store you'd like to save.  Use --filename to name the tar file output.  hauler store save --store carbide-store --filename carbide-images.tar.zst   ","version":"Next","tagName":"h3"},{"title":"Rancher​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#rancher","content":" Carbide customers can also fetch collections from the CSR, which will pull all the required artifacts for a product into the Hauler store.  Installing Rancher requires Cert Manager, which can be pulled from the CSR as well.  1. Log in to the Carbide Secured Registry.  hauler login -u &lt;username&gt; -p &lt;password&gt; rgcrprod.azurecr.us   2. Sync Rancher to your Hauler store.  Specify the --products flag with your desired version.  hauler store sync --store rancher-store --products rancher=v2.8.3 --key carbide-key.pub --platform &lt;platform/arch&gt;   3. Save the Hauler store as a tarball.  hauler store save --store rancher-store --filename rancher-images.tar.zst   ","version":"Next","tagName":"h3"},{"title":"Cert Manager​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#cert-manager","content":" Sync content:  hauler store sync --store certmanager-store --products cert-manager=v1.14.4 --key carbide-key.pub --platform &lt;platform/arch&gt;   Save tarball:  hauler store save --store certmanager-store --filename certmanager-images.tar.zst   ","version":"Next","tagName":"h3"},{"title":"RKE2​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#rke2","content":" Sync content:  hauler store sync --store rke2-store --products rke2=v1.27.12+rke2r1 --key carbide-key.pub --platform &lt;platform/arch&gt;   Save tarball:  hauler store save --store rke2-store --filename rke2-images.tar.zst   ","version":"Next","tagName":"h3"},{"title":"K3s​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#k3s","content":" Sync content:  hauler store sync --store k3s-store --products k3s=v1.27.12-k3s1 --key carbide-key.pub --platform &lt;platform/arch&gt;   Save tarball:  hauler store save --store k3s-store --filename k3s-images.tar.zst   ","version":"Next","tagName":"h3"},{"title":"Harvester​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#harvester","content":" Sync content:  hauler store sync --store harvester-store --products harvester=v1.4.1 --key carbide-key.pub --platform &lt;platform/arch&gt;   Save tarball:  hauler store copy --store harvester-store --filename harvester-images.tar.zst   ","version":"Next","tagName":"h3"},{"title":"Longhorn​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#longhorn","content":" Sync content:  hauler store sync --store longhorn-store --products longhorn=v1.6.1 --key carbide-key.pub --platform &lt;platform/arch&gt;   Save tarball:  hauler store save --store longhorn-store --filename longhorn-images.tar.zst   ","version":"Next","tagName":"h3"},{"title":"NeuVector​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#neuvector","content":" Sync content:  hauler store sync --store neuvector-store --products neuvector=v5.3.2 --key carbide-key.pub --platform &lt;platform/arch&gt;   Save tarball:  hauler store save --store neuvector-store --filename neuvector-images.tar.zst   ","version":"Next","tagName":"h3"},{"title":"Kubewarden​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#kubewarden","content":" Sync content:  hauler store sync --store kubewarden-store --products kubewarden=kubewarden-controller-2.0.11 --key carbide-key.pub --platform &lt;platform/arch&gt;   Save tarball:  hauler store save --store kubewarden-store --filename kubewarden-images.tar.zst   ","version":"Next","tagName":"h3"},{"title":"Application Collection​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#application-collection","content":" Sync app:  hauler store sync --store application-store --products apps-&lt;application-name&gt;=0.28.1 --key carbide-key.pub --platform &lt;platform/arch&gt;   Save tarball:  hauler store save --store application-store ---filename application.tar.zst   See Loading Local Images to Registry for information on loading the images into your airgapped registry. ","version":"Next","tagName":"h3"},{"title":"Loading Images to a Registry","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/loading-images","content":"","keywords":"","version":"Next"},{"title":"Adding Images to Airgap Registry​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#adding-images-to-airgap-registry","content":" ","version":"Next","tagName":"h2"},{"title":"Carbide​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#carbide","content":" 1. Load content from the tarball to the Hauler store.  hauler store load --store carbide-store carbide-images.tar.zst   2. Copy the content from the Hauler store to your registry.  hauler store copy --store carbide-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Rancher​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#rancher","content":" Load from tarball:  hauler store load --store rancher-store rancher-images.tar.zst   Copy to registry:  hauler store copy --store rancher-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Cert Manager​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#cert-manager","content":" Load from tarball:  hauler store load --store certmanager-store certmanager-images.tar.zst   Copy to registry:  hauler store copy --store certmanager-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"RKE2​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#rke2","content":" Load from tarball:  hauler store load --store rke2-store rke2-images.tar.zst   Copy to registry:  hauler store copy --store rke2-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"K3s​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#k3s","content":" Load from tarball:  hauler store load --store k3s-store k3s-images.tar.zst   Copy to registry:  hauler store copy --store k3s-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Harvester​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#harvester","content":" Load from tarball:  hauler store load --store harvester-store harvester-images.tar.zst   Copy to registry:  hauler store copy --store harvester-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Longhorn​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#longhorn","content":" Load from tarball:  hauler store load --store longhorn-store longhorn-images.tar.zst   Copy to registry:  hauler store copy --store longhorn-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"NeuVector​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#neuvector","content":" Load from tarball:  hauler store load --store neuvector-store neuvector-images.tar.zst   Copy to registry:  hauler store copy --store neuvector-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Kubewarden​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#kubewarden","content":" Load from tarball:  hauler store load --store kubewarden-store kubewarden-images.tar.zst   Copy to registry:  hauler store copy --store kubewarden-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Application Collection​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#application-collection","content":" Load from tarball:  hauler store load --store application-store application.tar.zst   Copy to registry:  hauler store copy --store application-store --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;  ","version":"Next","tagName":"h3"},{"title":"Prerequisites","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/prereqs","content":"","keywords":"","version":"Next"},{"title":"Required Tooling​","type":1,"pageTitle":"Prerequisites","url":"/carbide-docs/docs/registry-docs/prereqs#required-tooling","content":" K8s Package Management: Helm  Example installation steps:  curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 sudo chmod 755 get_helm.sh &amp;&amp; sudo ./get_helm.sh   For more options, visit the Helm install docs.  Supply Chain Verification: Cosign  Example installation steps:  curl -O -L &quot;https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64&quot; sudo mv cosign-linux-amd64 /usr/local/bin/cosign sudo chmod 755 /usr/local/bin/cosign   For more options, visit the Cosign install docs.  ","version":"Next","tagName":"h2"},{"title":"Recommended Tooling​","type":1,"pageTitle":"Prerequisites","url":"/carbide-docs/docs/registry-docs/prereqs#recommended-tooling","content":" Packaging/Airgapping: Hauler  Example installation steps:  curl -sfL https://get.hauler.dev | bash   For more options, visit the Hauler install docs.  ","version":"Next","tagName":"h2"},{"title":"Required Artifacts​","type":1,"pageTitle":"Prerequisites","url":"/carbide-docs/docs/registry-docs/prereqs#required-artifacts","content":" Carbide Public Key  Download the public key for Carbide.  curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub   View the public key for Carbide.  cat carbide-key.pub -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q== -----END PUBLIC KEY-----   ","version":"Next","tagName":"h2"},{"title":"Log In to CSR​","type":1,"pageTitle":"Prerequisites","url":"/carbide-docs/docs/registry-docs/prereqs#log-in-to-csr","content":" Log in to the Carbide Secured Registry.  Using Hauler (recommended):  hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us   Using Docker:  docker login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us  ","version":"Next","tagName":"h2"},{"title":"RKE2/K3s Uninstall","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/uninstall-kubernetes","content":"","keywords":"","version":"Next"},{"title":"K3s​","type":1,"pageTitle":"RKE2/K3s Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-kubernetes#k3s","content":" ","version":"Next","tagName":"h2"},{"title":"Reverting to DockerHub Images (Private Registry)​","type":1,"pageTitle":"RKE2/K3s Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-kubernetes#reverting-to-dockerhub-images-private-registry","content":" If using a private registry, to revert from using the Carbide Secured Images to the normal Rancher images, you simply need to follow the docs to pull the normal images and overwrite them in your registry: https://docs.k3s.io/installation/airgap  Upon restart of your pods, they should be utilizing the upstream images.  NOTE: If you've configured enforcement using Kubewarden or Kyverno, be sure to disable/uninstall to avoid policy enforcement blocking DockerHub images.  ","version":"Next","tagName":"h3"},{"title":"Reverting to DockerHub Images (Directly)​","type":1,"pageTitle":"RKE2/K3s Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-kubernetes#reverting-to-dockerhub-images-directly","content":" If you want to revert to using images directly from Docker Hub, you'll need to delete the registries.yaml configuration file made here.  You will also need to unset the system-default-registry configuration when installing K3s by re-running the curl command used to install K3s on each node, with the parameter unset.  For instance, if you originally ran the following when using Carbide images:  curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=&quot;server --flannel-backend none&quot; K3S_TOKEN=12345 sh - --system-default-registry &lt;registry-url&gt;   You'd need to run:  curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=&quot;server --flannel-backend none&quot; K3S_TOKEN=12345 sh -   ","version":"Next","tagName":"h3"},{"title":"RKE2​","type":1,"pageTitle":"RKE2/K3s Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-kubernetes#rke2","content":" ","version":"Next","tagName":"h2"},{"title":"Reverting to DockerHub Images (Private Registry)​","type":1,"pageTitle":"RKE2/K3s Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-kubernetes#reverting-to-dockerhub-images-private-registry-1","content":" If using a private registry, to revert from using the Carbide Secured Images to the normal Rancher images, you simply need to follow the docs to pull the normal images and overwrite them in your registry: https://docs.rke2.io/install/airgap  Upon restart of your pods, they should be utilizing the upstream images.  ","version":"Next","tagName":"h3"},{"title":"Reverting to DockerHub Images (Directly)​","type":1,"pageTitle":"RKE2/K3s Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-kubernetes#reverting-to-dockerhub-images-directly-1","content":" If you want to revert to using images directly from Docker Hub, you'll need to delete the registries.yaml configuration file made here.  You'll also need to clean up the system-default-registry key/value from your /etc/rancher/rke2/config.yaml file on each node, and restart rke2.  # /etc/rancher/rke2/config.yaml node-name: controlplane1 write-kubeconfig-mode: 0640 ...   To restart controlplane nodes, run: systemctl restart rke2-serverTo restart agents, run: systemctl restart rke2-agent  NOTE: For controlplane nodes, be sure to restart them one at a time. ","version":"Next","tagName":"h3"},{"title":"Release Cadence","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/release-cadence","content":"","keywords":"","version":"Next"},{"title":"Build Pipelines​","type":1,"pageTitle":"Release Cadence","url":"/carbide-docs/docs/registry-docs/release-cadence#build-pipelines","content":" Our secure build pipelines are triggered by the upstream release of a Rancher portfolio product, and the artifacts will be made available via the Carbide Secured Registry shortly thereafter.  ","version":"Next","tagName":"h2"},{"title":"Product Lifecycles​","type":1,"pageTitle":"Release Cadence","url":"/carbide-docs/docs/registry-docs/release-cadence#product-lifecycles","content":" For information on Carbide product releases and support lifecycles, see here. ","version":"Next","tagName":"h2"},{"title":"Enforcement","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/enforcement","content":"","keywords":"","version":"Next"},{"title":"Kubewarden Enforcement​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#kubewarden-enforcement","content":" The Kubewarden images can be pulled from the Carbide Secured Registry (CSR).  ","version":"Next","tagName":"h2"},{"title":"Installation​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#installation","content":" To install Kubewarden, run the following commands, substituting your registry information.  Add and update the helm chart repository.  helm repo add kubewarden https://charts.kubewarden.io helm repo update   Install the CRDs helm chart.  helm install --wait -n kubewarden --create-namespace kubewarden-crds kubewarden/kubewarden-crds   Install the controller helm chart.  helm install --wait -n kubewarden kubewarden-controller kubewarden/kubewarden-controller --set &quot;common.cattle.systemDefaultRegistry=&lt;registry-url&gt;&quot;   Install the defaults helm chart.  helm install --wait -n kubewarden kubewarden-defaults kubewarden/kubewarden-defaults --set &quot;common.cattle.systemDefaultRegistry=&lt;registry-url&gt;&quot; kubewarden/kubewarden-defaults   For more information about installing Kubewarden, see the docs.  ","version":"Next","tagName":"h3"},{"title":"Private Registry​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#private-registry","content":" If your Rancher system images are in a private registry requiring authentication, you'll need to configure your Kubewarden policy-server with a Pull Secret in order for it to validate the signature.  ","version":"Next","tagName":"h3"},{"title":"Copying Policy Artifact to a Registry (Connected Environments)​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#copying-policy-artifact-to-a-registry-connected-environments","content":" Fetch the image from the Carbide Secured Registry.  hauler store add image rgcrprod.azurecr.us/policies/verify-image-signatures:v0.1.7 --key carbide-key.pub --platform linux/amd64   Copy the content from the Hauler store to your registry.  hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Airgapped Environments​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#airgapped-environments","content":" Use the below steps, substituting your registry, to validate and locally save the policy artifact.  Saving Policy Artifact​  Fetch the image from the Carbide Secured Registry.  hauler store add image rgcrprod.azurecr.us/policies/verify-image-signatures:v0.1.7 --key carbide-key.pub --platform linux/amd64   Save and output the content from the Hauler store to tarball.  hauler store save --filename kubewarden-policy.tar.zst   Loading Policy Artifact to a Registry​  Load the content from the tarball to the Hauler store.  hauler store load kubewarden-policy.tar.zst   Copy the content from the Hauler store to your registry.  hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Creating the Policy​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#creating-the-policy","content":" After installing/configuring Kubewarden and copying the policy to your registry, apply the following ClusterAdmissionPolicy (substituting &lt;registry-url&gt; with your registry domain):  apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: verify-image-signatures spec: module: &lt;registry-url&gt;/policies/verify-image-signatures:v0.1.7 rules: - apiGroups: ['', 'apps', 'batch'] apiVersions: ['v1'] resources: [ 'pods', 'deployments', 'statefulsets', 'replicationcontrollers', 'jobs', 'cronjobs', ] operations: - CREATE - UPDATE mutating: true settings: signatures: - image: '&lt;registry-url&gt;/carbide/*' pubKeys: - | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q== -----END PUBLIC KEY----- - image: '&lt;registry-url&gt;/jetstack/*' pubKeys: - | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q== -----END PUBLIC KEY----- - image: '&lt;registry-url&gt;/rancher/*' pubKeys: - | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q== -----END PUBLIC KEY----- - image: '&lt;registry-url&gt;/longhornio/*' pubKeys: - | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q== -----END PUBLIC KEY----- - image: '&lt;registry-url&gt;/neuvector/*' pubKeys: - | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q== -----END PUBLIC KEY-----   ","version":"Next","tagName":"h3"},{"title":"Kyverno Enforcement​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#kyverno-enforcement","content":" ","version":"Next","tagName":"h2"},{"title":"Installation​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#installation-1","content":" Follow the instructions to install Kyverno onto your cluster.  ","version":"Next","tagName":"h3"},{"title":"Private Registry​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#private-registry-1","content":" If your Rancher system images are in a private registry requiring authentication, you'll need to configure your Kyverno policy-server with a Pull Secret in order for it to validate the signature.  ","version":"Next","tagName":"h3"},{"title":"Creating the Policy​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#creating-the-policy-1","content":" After installing/configuring Kyverno, apply the following Policy (substituting &lt;registry-url&gt; with your registry domain):  apiVersion: kyverno.io/v1 kind: Policy metadata: name: verify-image-signatures spec: validationFailureAction: enforce background: false webhookTimeoutSeconds: 30 failurePolicy: Fail rules: - name: check-image match: any: - resources: kinds: - Pod - Deployment verifyImages: - imageReferences: - '&lt;registry-url&gt;/carbide/*' - '&lt;registry-url&gt;/jetstack/*' - '&lt;registry-url&gt;/rancher/*' - '&lt;registry-url&gt;/longhornio/*' - '&lt;registry-url&gt;/neuvector/*' attestors: - count: 1 entries: - keys: publicKeys: |- -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q== -----END PUBLIC KEY-----  ","version":"Next","tagName":"h3"},{"title":"Rancher Uninstall","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/uninstall-rancher","content":"","keywords":"","version":"Next"},{"title":"Reverting Cert Manager​","type":1,"pageTitle":"Rancher Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-rancher#reverting-cert-manager","content":" As Rancher has a dependency on Cert Manager, you'll need to update your Helm install of Cert Manager to use the default images.  ","version":"Next","tagName":"h2"},{"title":"Using Your Own Registry​","type":1,"pageTitle":"Rancher Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-rancher#using-your-own-registry","content":" If using your own registry, you simply need to collect the necessary images for cert-manager and overwrite those images in your registry.  As pods cycle, the new image should propagate across the cluster.  ","version":"Next","tagName":"h3"},{"title":"Using Docker Hub Images​","type":1,"pageTitle":"Rancher Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-rancher#using-docker-hub-images","content":" If you want to go back to using Docker Hub images directly, you'll need to upgrade the cert-manager installation to revert pointing to the private registry hosting the Carbide images:  helm install cert-manager jetstack/cert-manager \\ --namespace cert-manager \\ --create-namespace \\ --version v1.14.4   ","version":"Next","tagName":"h3"},{"title":"Registry Auth Scenarios​","type":1,"pageTitle":"Rancher Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-rancher#registry-auth-scenarios","content":" ","version":"Next","tagName":"h2"},{"title":"Global Registry​","type":1,"pageTitle":"Rancher Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-rancher#global-registry","content":" Uninstall Carbide Images on Rancher (Private Registry)​  If using your own registry, you simply need to collect the necessary images for Rancher and overwrite those images in your registry.  As pods cycle, the new image should propagate across the cluster.  Uninstall Carbide Images on Rancher (Docker Hub)​  If wanting to use upgrade Docker Hub images for Rancher:  Log into Rancher and configure the default administrator password.Click ☰ &gt; Global Settings.Go to the setting called system-default-registry and choose ⋮ &gt; Edit Setting.Click the Use the default value button.  Result: Rancher will use your private registry to pull system images.  Reverting Downstream Clusters to use DockerHub Images​  If you want to revert downstream RKE2/K3s clusters to use DockerHub images:  Click ☰ &gt; Cluster Management.On the Clusters page, select the 3-dot button to the right for downstream cluster you'd like to revert, and select Edit Config..In the Cluster Configuration go to the Registries tab and click Use default global registry for Rancher System Container Images.Click Save.  Result: The cluster will update nodepools to use DockerHub images.  ","version":"Next","tagName":"h3"},{"title":"Manual registries.yaml configuration (RKE2/k3s)​","type":1,"pageTitle":"Rancher Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-rancher#manual-registriesyaml-configuration-rke2k3s","content":" See the RKE2/K3s Uninstall documentation.  ","version":"Next","tagName":"h3"},{"title":"Reverting Rancher Chart​","type":1,"pageTitle":"Rancher Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-rancher#reverting-rancher-chart","content":" Follow Rancher's Installation Guide, you can revert to using DockerHub images by removing values from the Helm upgrade command.  helm upgrade rancher rancher-latest/rancher \\ --namespace cattle-system \\ --set hostname=rancher.my.org \\ --set replicas=3  ","version":"Next","tagName":"h3"},{"title":"Validating Images","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/validating-images","content":"","keywords":"","version":"Next"},{"title":"Secure Supply Chain​","type":1,"pageTitle":"Validating Images","url":"/carbide-docs/docs/registry-docs/validating-images#secure-supply-chain","content":" Before pulling images, or even after images have been pushed to a registry, you should always verify those images against the Carbide public key. Below are the instructions for using cosign directly from a registry.  If using Hauler to seed your registry, Hauler will automatically verify the signatures when the public key is set in the manifest or as a flag with --key.  NOTE: You'll need to substitute rgcrprod.azurecr.us with your own registry domain, if verifying images in your own registry.  In Carbide Images v2 (or Cosign v2), the attachment of supply chain artifacts to the top layer of an image has been deprecated. In order to maintain interoperability, we have migrated our images and supply chain artifacts to be attached at the individual layer for a specific platform or architecture of an image. If you would like to see more information, please see the notice from cosign here.  Carbide Images v2 (After 03/2024) Display Supply Chain Artifacts​ View supply chain artifacts for an image: cosign tree rgcrprod.azurecr.us/carbide/carbide-docs@sha256:9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91 Sample output for carbide-docs:0.1.4 for linux/amd64: carbide-docs@sha256:9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91 📦 Supply Chain Security Related artifacts for an image: rgcrprod.azurecr.us/carbide/carbide-docs@sha256:9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91 └── 💾 Attestations for an image tag: rgcrprod.azurecr.us/carbide/carbide-docs:sha256-9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91.att ├── 🍒 sha256:dfa305431fecc7148b2975285295701a4e7e2f314bda41efa1fe4fb31758dc68 └── 🍒 sha256:133e5c020fe7fd20ae4453a9193a3b2a5e36a0447aa9d322ba83494bfde912d4 └── 🔐 Signatures for an image tag: rgcrprod.azurecr.us/carbide/carbide-docs:sha256-9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91.sig └── 🍒 sha256:f8cf6aea22f450991fc1800bc0b1440377a40833a94ff51c850210218fd5ad4d Verifying the Digital Signature​ Verify the image's attestation by validating the supplied signature: cosign verify --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs:0.1.4 | jq Viewing the Software Bill of Materials​ Verify the image's sbom attestation by validating the supplied signature: cosign verify-attestation --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs@sha256:9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91 --type spdxjson | jq View the image's SBOM: cosign verify-attestation --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs@sha256:9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91 --type spdxjson | jq -r '.payload' | base64 -d | jq Viewing the Vulnerability Scan Results​ Verify the image's vulnerability attestation by validating the supplied signature: cosign verify-attestation --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs@sha256:9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91 --type vuln | jq View the image's vulnerability scan results: cosign verify-attestation --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs@sha256:9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91 --type vuln | jq -r '.payload' | base64 -d | jq   Carbide v1 (Before 03/2024) Display Supply Chain Artifacts​ Display supply chain related artifacts for an image: cosign tree rgcrprod.azurecr.us/carbide/carbide-docs:0.1.3 Example output: 📦 Supply Chain Security Related artifacts for an image: rgcrprod.azurecr.us/carbide/carbide-docs:0.1.3 └── 💾 Attestations for an image tag: rgcrprod.azurecr.us/carbide/carbide-docs:sha256-4d8b3e7e6e1a7640ca5f4ea833a5aef7a6f031947093e3e7625c8c949c1c8839.att └── 🍒 sha256:8890d36772569483c9295be31a779770af0a61b51c6ba83cecc699fc724b9fd7 └── 🔐 Signatures for an image tag: rgcrprod.azurecr.us/carbide/carbide-docs:sha256-4d8b3e7e6e1a7640ca5f4ea833a5aef7a6f031947093e3e7625c8c949c1c8839.sig └── 🍒 sha256:a28126ae0a4bb23f71787e912125c25232677f6948812d937fd8feb9fe03ac6f └── 📦 SBOMs for an image tag: rgcrprod.azurecr.us/carbide/carbide-docs:sha256-4d8b3e7e6e1a7640ca5f4ea833a5aef7a6f031947093e3e7625c8c949c1c8839.sbom └── 🍒 sha256:970fc626b7075bd4822083cebc26d2e7cfcc1d5f1bfbcf9c3d0b3543a769be99 Verifying the Digital Signature​ Verify the image's attestation by validating the supplied signature: cosign verify --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs:0.1.3 Viewing the Software Bill of Materials​ Verify the image's SBOM attestation by validating the supplied signature: cosign verify --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs:0.1.3 --attachment sbom View the image's SBOM: cosign download sbom rgcrprod.azurecr.us/carbide/carbide-docs:0.1.3 Viewing the Vulnerability Scan Results​ Verify the image's SBOM attestation by validating the supplied signature: cosign verify-attestation --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs:0.1.3 --type vuln | jq View the image's vulnerability scan results: cosign verify-attestation --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs:0.1.3 --type vuln | jq -r '.payload' | base64 -d | jq   ","version":"Next","tagName":"h2"},{"title":"Resources​","type":1,"pageTitle":"Validating Images","url":"/carbide-docs/docs/registry-docs/validating-images#resources","content":" For more information on cosign, check out the Chainguard Academy. ","version":"Next","tagName":"h3"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/carbide-docs/docs/stigatron-docs/introduction","content":"","keywords":"","version":"Next"},{"title":"What is STIGATRON?​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/stigatron-docs/introduction#what-is-stigatron","content":" Our Federal/Government-driven Kubernetes Distribution, RKE2, is the first Kubernetes distribution outside of the upstream project to obtain full DISA STIG Certification.  STIGATRON was developed to alleviate the pain points of traditional management and maintenance of assessing system compliance, with features including:  STIGATRON provides the ability to perform a real-time scan against all downstream clusters being managed by Rancher.These scans will provide a mapping of the current state of the cluster against the controls with the RKE2 DISA STIG.Users can visualize the results of these scans from the Rancher UI by accessing the MITRE Heimdall2 interface. This provides current compliance status, tree maps mapping to NIST 800-53 controls, and a detailed breakdown of each check performed, including the commands executed, the output of those commands, and what steps can be performed to mitigate any failures.Users can also export the scan results into the common formats required by Cyber Systems within the federal space. This includes XCCDF and results.json.  ","version":"Next","tagName":"h2"},{"title":"IOC Expectations​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/stigatron-docs/introduction#ioc-expectations","content":" As our product is still at Initial Operation Capability (IOC), there are some expectations to level-set:  Installation and packaging is still in progress and improving.  If you see issues and areas for improvement, please submit Github issues here. ","version":"Next","tagName":"h2"},{"title":"Creating STIGATRON Scans","type":0,"sectionRef":"#","url":"/carbide-docs/docs/stigatron-docs/create-scan","content":"","keywords":"","version":"Next"},{"title":"Profile Selection​","type":1,"pageTitle":"Creating STIGATRON Scans","url":"/carbide-docs/docs/stigatron-docs/create-scan#profile-selection","content":" When selecting a STIGATRON Scan Profile, there are 2 options for each support Kubernetes version:  Official: This is the officially certified version from DISA. While fully certified, it may be missing the latest security requirements currently in process for STIG reevaluations and fixes.Preview: This is the latest version currently being worked and submitted to DISA from Rancher Government. This will contain the latest STIG fixes and reevaluations, even before being fully certified.  It is useful to leverage both versions when scanning to understand your cluster's current state against both of the current and future STIGs. ","version":"Next","tagName":"h2"},{"title":"Prerequisites","type":0,"sectionRef":"#","url":"/carbide-docs/docs/stigatron-docs/prereqs","content":"Prerequisites ⚠️ DISCLAIMER: Due to upstream changes outside RGS control, development of STIGATRON has been temporarily paused. STIGATRON will not be available in the Carbide Secured Registry and current users may experience issues. We are working with the necessary parties to identify a solution as soon as possible. Thank you for your patience. In order to utilize STIGATRON, you will need the following prerequisites: Rancher v2.7.0 or higher: https://ranchermanager.docs.rancher.com/integrations-in-rancher/rancher-extensionsHelm: https://helm.sh/docs/intro/installAccess to the local cluster, to be able to install and deploy the app(s).Access to the downstream cluster(s), to be able to install and deploy the app(s). It is also assumed you have followed all of the Carbide Secured Registry (CSR) documentation. This means you have: seeded your registry with the images from the CSRthe carbide helm charts available for useconfigured k3s/rke2 to use your registryconfigured Rancher Manager to use your registrysetup policy enforcement to only allow images from the CSR","keywords":"","version":"Next"},{"title":"Installation","type":0,"sectionRef":"#","url":"/carbide-docs/docs/stigatron-docs/installation","content":"","keywords":"","version":"Next"},{"title":"Local Cluster​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/stigatron-docs/installation#local-cluster","content":" ","version":"Next","tagName":"h2"},{"title":"Enabling UI Extensions​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/stigatron-docs/installation#enabling-ui-extensions","content":" On the local cluster running Rancher, you'll need to first enable Extensions.  Log into Rancher as an administrator.Click the menu in the upper-left of the main dashboard and click the Extensions link near the bottom.Click the Enable button on the Extensions screen.Click Ok, when prompted to Enable Extension Support.    ","version":"Next","tagName":"h3"},{"title":"Installing STIGATRON UI Plugin​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/stigatron-docs/installation#installing-stigatron-ui-plugin","content":" Next, on the same local cluster, run the following Helm commands to install the UI Plugin for STIGATRON (see the tgz method above for airgap with no Helm repository) and ensure to substitute your registry:  helm install -n carbide-stigatron-system --create-namespace \\ --set &quot;global.cattle.systemDefaultRegistry=&lt;registry-url&gt;&quot; \\ stigatron-ui carbide-charts/stigatron-ui   Check the status of the rollout:  helm status -n carbide-stigatron-system stigatron-ui   ","version":"Next","tagName":"h3"},{"title":"Downstream Clusters​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/stigatron-docs/installation#downstream-clusters","content":" ","version":"Next","tagName":"h2"},{"title":"Installing CIS Benchmark Operator​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/stigatron-docs/installation#installing-cis-benchmark-operator","content":" On downstream clusters, you'll need to first install Rancher's CIS Benchmark Operator:  Navigate to your cluster in the Explore Cluster menu.On the left, select Apps and click Charts.In the Filter box on the right, type CIS Benchmark.Review the Chart Information and when ready click Install.Leave all default values, select Next, and then click Install.Wait for the installation to complete and feel free to close the kubectl shell.  ","version":"Next","tagName":"h3"},{"title":"Creating the License Secret​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/stigatron-docs/installation#creating-the-license-secret","content":" Next, you'll need to create the carbide-stigatron-system namespace and create a secret named stigatron-license containing your Carbide License. This step is critical, as STIGATRON operator will not start without this secret present:  # Create the namespace kubectl create namespace carbide-stigatron-system # Now create the secret, substituting your license kubectl create secret generic stigatron-license -n carbide-stigatron-system --from-literal=license=YOUR_LICENSE_HERE   ","version":"Next","tagName":"h3"},{"title":"Installing STIGATRON Operator​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/stigatron-docs/installation#installing-stigatron-operator","content":" Next, you'll need to run the following Helm command to install the STIGATRON Operator (NOTE: Using carbide-stigatron-system as the namespace is required):  helm install -n carbide-stigatron-system \\ --set &quot;global.cattle.systemDefaultRegistry=&lt;registry-url&gt;&quot; \\ --set &quot;heimdall2.global.cattle.systemDefaultRegistry=&lt;registry-url&gt;&quot; \\ stigatron carbide-charts/stigatron   Check the status of the rollout:  helm status -n carbide-stigatron-system stigatron   You should now see STIGATRON on the left menu of your Explore Cluster. ","version":"Next","tagName":"h3"},{"title":"Using MITRE Heimdall","type":0,"sectionRef":"#","url":"/carbide-docs/docs/stigatron-docs/using-heimdall","content":"Using MITRE Heimdall ⚠️ DISCLAIMER: Due to upstream changes outside RGS control, development of STIGATRON has been temporarily paused. STIGATRON will not be available in the Carbide Secured Registry and current users may experience issues. We are working with the necessary parties to identify a solution as soon as possible. Thank you for your patience. To export scan results to common formats, select the Export button in the upper-left. Select the desired export format.","keywords":"","version":"Next"},{"title":"Uninstall","type":0,"sectionRef":"#","url":"/carbide-docs/docs/stigatron-docs/uninstall","content":"","keywords":"","version":"Next"},{"title":"Local Cluster​","type":1,"pageTitle":"Uninstall","url":"/carbide-docs/docs/stigatron-docs/uninstall#local-cluster","content":" On the local cluster running Rancher, run the following Helm command to remove the UI Extension.  helm uninstall -n carbide-stigatron-system stigatron-ui   ","version":"Next","tagName":"h2"},{"title":"Downstream Clusters​","type":1,"pageTitle":"Uninstall","url":"/carbide-docs/docs/stigatron-docs/uninstall#downstream-clusters","content":" On each downstream cluster, run the following command to uninstall STIGATRON:  helm uninstall -n carbide-stigatron-system stigatron   ","version":"Next","tagName":"h2"},{"title":"Uninstalling CIS Benchmark (Optional)​","type":1,"pageTitle":"Uninstall","url":"/carbide-docs/docs/stigatron-docs/uninstall#uninstalling-cis-benchmark-optional","content":" If you want to uninstall CIS Benchmark, after uninstall STIGATRON, perform the following:  Log into Rancher.In the UI, navigate to each downstream cluster in the Cluster Explorer.On the left menu, select Apps, then select Installed Apps.Find the app named rancher-cis-benchmark, select the 3-dot menu on the right, and select Delete. (IMPORTANT: Delete this before the CRD application)Find the app named rancher-cis-benchmark-crd, select the 3-dot menu on the right, and select Delete.  ","version":"Next","tagName":"h2"},{"title":"Disable UI Extensions (Optional)​","type":1,"pageTitle":"Uninstall","url":"/carbide-docs/docs/stigatron-docs/uninstall#disable-ui-extensions-optional","content":" If you want to disable all UI Extensions after uninstalling the STIGATRON UI extension, perform the following:  On the extensions management page in Rancher, click the 3-dot menu.Select Disable Extension Support. ","version":"Next","tagName":"h2"}],"options":{"languages":["en"],"indexBaseUrl":true,"highlightResult":true,"id":"default"}}