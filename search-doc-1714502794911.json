{"searchDocs":[{"title":"Introduction","type":0,"sectionRef":"#","url":"/carbide-docs/docs/airgapped-docs/introduction","content":"","keywords":"","version":"Next"},{"title":"IOC Expectations​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/airgapped-docs/introduction#ioc-expectations","content":" As our product is still at Initial Operation Capability (IOC), there are some expectations to level-set:  Installation and packaging is still in progress and improving.  If you see issues and areas for improvement, please submit Github issues here.  ","version":"Next","tagName":"h2"},{"title":"What is this?​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/airgapped-docs/introduction#what-is-this","content":" When in an airgap, having accessibility to documentation can be critical to mission success, especially while troubleshooting problems.  Carbide Airgapped Docs will give Rancher supported users access to documentation for not only Carbide itself, but the entire supported Rancher product porfolio. This includes capabililites like query and copy/paste shortcuts. ","version":"Next","tagName":"h2"},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/carbide-docs/docs/airgapped-docs/getting-started","content":"","keywords":"","version":"Next"},{"title":"Airgapped Docs Images​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/airgapped-docs/getting-started#airgapped-docs-images","content":" The images for Airgapped Docs can be found here. You'll need to pull these images using hauler.  ","version":"Next","tagName":"h2"},{"title":"Internet-Connected Environment​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/airgapped-docs/getting-started#internet-connected-environment","content":" If you're working in a connected environment, look here for instructions on pulling the images into your registry.  ","version":"Next","tagName":"h3"},{"title":"Airgapped Environment​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/airgapped-docs/getting-started#airgapped-environment","content":" If you're working in an airgapped environment, look here for instructions on pulling the images locally.  On the airgap, look here for loading the localized images into the airgapped registry.  ","version":"Next","tagName":"h3"},{"title":"Airgapped Docs Helm Chart​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/airgapped-docs/getting-started#airgapped-docs-helm-chart","content":" The chart for Airgapped Docs can be found here. You'll need to pull the chart using hauler.  ","version":"Next","tagName":"h2"},{"title":"Configuring Registry Credentials​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/airgapped-docs/getting-started#configuring-registry-credentials","content":" ","version":"Next","tagName":"h2"},{"title":"Local Cluster​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/airgapped-docs/getting-started#local-cluster","content":" On the local cluster running Rancher Multi-cluster Manager, you'll need to configure credentials for the registry with the Airgapped Docs images. See the Rancher Configuration on how to set up those credentials.  ","version":"Next","tagName":"h3"},{"title":"Downstream Clusters​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/airgapped-docs/getting-started#downstream-clusters","content":" For downstream clusters, you'll need to also configure registry credentials. Depending on how RKE2 was configured and set up, there are a few ways to do this.  ","version":"Next","tagName":"h3"},{"title":"Rancher-Provisioned Cluster​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/airgapped-docs/getting-started#rancher-provisioned-cluster","content":" If you provisioned or are provisioning RKE2 directly from the Rancher UI, you can configure/update that cluster with credentials.  Click the upper-left menu and navigate to Cluster Management.If updating an existing cluster, select that cluster, click the 3-dot menu in the upper-right, and select Edit Config. If creating a new cluster, just click Create in the upper-left.Once you get to the screen to update/create the cluster's node pools, scroll to the bottom under Cluster Configuration and find the Registries tab.Select the second option (Use specified private registry for Rancher System Container Images).Enter your registry hostname in the first box.In the Authentication box, select Create a HTTP Basic Auth Secret and enter your credentials.  For future clusters using the same registry, you can just select existing secret.  Click Save.    Wait for cluster to reconcile.  ","version":"Next","tagName":"h3"},{"title":"Imported Cluster​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/airgapped-docs/getting-started#imported-cluster","content":" If you're working with a cluster that was imported or is to be imported into the Rancher MCM, you'll need to update the containerd registries.yaml file on every node, substituting your registry hostname and credentials:  # /etc/rancher/k3s/registries.yaml # /etc/rancher/rke2/registries.yaml configs: &quot;&lt;registry-url&gt;&quot;: auth: username: &lt;redacted&gt; password: &lt;redacted&gt;  ","version":"Next","tagName":"h3"},{"title":"Prerequisites","type":0,"sectionRef":"#","url":"/carbide-docs/docs/airgapped-docs/prereqs","content":"Prerequisites In order to utilize Airgapped Docs, you will need the following prerequisites: Rancher v2.7.0 or higher: https://ranchermanager.docs.rancher.com/integrations-in-rancher/rancher-extensionsFor fetching and packaging... Hauler: https://github.com/rancherfederal/haulerFor installation and deployment... Helm: https://helm.sh/docs/intro/installAccess to the local cluster, to be able to install and deploy the app(s).Access to the downstream cluster(s), to be able to install and deploy the app(s).","keywords":"","version":"Next"},{"title":"Uninstall","type":0,"sectionRef":"#","url":"/carbide-docs/docs/airgapped-docs/uninstall","content":"","keywords":"","version":"Next"},{"title":"Downstream Clusters​","type":1,"pageTitle":"Uninstall","url":"/carbide-docs/docs/airgapped-docs/uninstall#downstream-clusters","content":" On each downstream cluster, run the following command to uninstall Airgapped Docs:  helm uninstall -n carbide-docs-system airgapped-docs  ","version":"Next","tagName":"h2"},{"title":"Installation","type":0,"sectionRef":"#","url":"/carbide-docs/docs/airgapped-docs/installation","content":"","keywords":"","version":"Next"},{"title":"Downstream Clusters​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/airgapped-docs/installation#downstream-clusters","content":" Run the following Helm command to install Airgapped Docs chart, substituting your registry in:  helm install -n carbide-docs-system --create-namespace \\ --set &quot;global.cattle.systemDefaultRegistry=&lt;registry-url&gt;&quot; \\ airgapped-docs carbide-charts/airgapped-docs   Check the status of the rollout:  helm status -n carbide-docs-system airgapped-docs   You should now see Airgapped Docs on the left menu of your Explore Cluster.  ","version":"Next","tagName":"h2"},{"title":"Selecting Documentation for Low-Compute Environments​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/airgapped-docs/installation#selecting-documentation-for-low-compute-environments","content":" There may be situations where you are running in a low-compute, low-resource environment or are not using specific products and do not want to utilize specific documentation from Airgapped Docs. For those situations, you can disable specific products during installation, such as:  # Disable neuvector docs helm install -n carbide-docs-system --create-namespace \\ --set &quot;global.cattle.systemDefaultRegistry=&lt;registry-url&gt;&quot; \\ --set &quot;docs.neuvector.enabled=false&quot; \\ airgapped-docs carbide-charts/airgapped-docs   For a full list of products that can be disabled, see here. ","version":"Next","tagName":"h2"},{"title":"Carbide Helm Charts","type":0,"sectionRef":"#","url":"/carbide-docs/docs/carbide-charts","content":"","keywords":"","version":"Next"},{"title":"Available Helm Charts​","type":1,"pageTitle":"Carbide Helm Charts","url":"/carbide-docs/docs/carbide-charts#available-helm-charts","content":" NAME CHART VERSION APP VERSION DESCRIPTION carbide-charts/airgapped-docs 0.1.49 0.1.4 Rancher Government Airgapped Docs carbide-charts/heimdall2 0.1.45 0.1.1 Rancher Government Heimdall2 Tool carbide-charts/rancher 2.8.3 v2.8.3 Install Rancher Server to manage Kubernetes... carbide-charts/stigatron 0.2.5 0.2.2 Rancher Government Stigatron Extension carbide-charts/stigatron-ui 0.2.3 0.2.0 Rancher Government Stigatron UI Extension   ","version":"Next","tagName":"h3"},{"title":"How To Use (Connected Environments)​","type":1,"pageTitle":"Carbide Helm Charts","url":"/carbide-docs/docs/carbide-charts#how-to-use-connected-environments","content":" ","version":"Next","tagName":"h2"},{"title":"For Helm Chart Repositories​","type":1,"pageTitle":"Carbide Helm Charts","url":"/carbide-docs/docs/carbide-charts#for-helm-chart-repositories","content":" # add and update the helm chart repository helm repo add carbide-charts https://rancherfederal.github.io/carbide-charts helm repo update # view the charts in the helm chart repository helm search repo carbide-charts # example install of a helm chart helm install &lt;release-name&gt; carbide-charts/&lt;chart&gt;   If you would like to do add the Carbide Helm Charts to the Rancher Manager Chart Catalog, so you are able to use the user interface to install them, please follow the steps in the Rancher Manager Docs.  ","version":"Next","tagName":"h3"},{"title":"How to Use (Airgaped Environments)​","type":1,"pageTitle":"Carbide Helm Charts","url":"/carbide-docs/docs/carbide-charts#how-to-use-airgaped-environments","content":" ","version":"Next","tagName":"h2"},{"title":"For Helm Chart Repositories​","type":1,"pageTitle":"Carbide Helm Charts","url":"/carbide-docs/docs/carbide-charts#for-helm-chart-repositories-1","content":" On Connected Environment​  # generate the hauler manfiest for the carbide charts cat &lt;&lt;EOF &gt; carbide-charts.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: carbide-charts spec: charts: - name: rancher repoURL: https://rancherfederal.github.io/carbide-charts version: 2.8.3 - name: airgapped-docs repoURL: https://rancherfederal.github.io/carbide-charts version: 0.1.49 - name: stigatron repoURL: https://rancherfederal.github.io/carbide-charts version: 0.2.5 - name: stigatron-ui repoURL: https://rancherfederal.github.io/carbide-charts version: 0.2.3 --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Charts metadata: name: carbide-dependency-charts spec: charts: - name: heimdall2 repoURL: https://rancherfederal.github.io/carbide-charts version: 0.1.45 - name: nats repoURL: https://nats-io.github.io/k8s/helm/charts version: 1.1.5 EOF # fetch the content from generated hauler manifest # verify the version and the platform/architecture hauler store sync --files carbide-charts.yaml --store carbide-store --platform &lt;platform/arch&gt; # save and output the content from the hauler store to tarball hauler store save --filename carbide-charts.tar.zst   On Airgapped Environment​  # load the content from the tarball to the hauler store hauler store load carbide-charts.tar.zst # server the content from the hauler store hauler store serve fileserver # example install of a helm chart helm install &lt;release-name&gt; http://&lt;FQDN or IP&gt;:&lt;PORT&gt;/&lt;chart&gt;.tgz  ","version":"Next","tagName":"h3"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/carbide-docs/docs/intro","content":"Introduction Carbide is Rancher Government's hardened distribution of the SUSE Rancher product portfolio. Carbide is exclusively offered to our US Government and partnering customers that value security above all else. Rancher Carbide is tactically built with the following enhancements over the community version: SLSA 3 compliant secure build process hosted on Azure GovernmentDigitally Signed Container Images. Every container hosted in our registry has been digitally signed by Rancher Government Solutions. Verifiable trust is baked into everything we do.Software Bill of Materials (SBOM) support in every container imageContainer AttestationsContainer Vulnerability ScansAuthenticated Registry hosted on Azure Government Container RegistrySTIGATRON: Day 2 security operator powered by Rancher Government's DISA STIGsAirgapped Docs: Fully airgapped-supportive documentation for the entire supported Rancher product portfolioCustom red-white-blue theming &amp; Rancher manager white-labeling We are honored to serve your mission.","keywords":"","version":"Next"},{"title":"Feedback","type":0,"sectionRef":"#","url":"/carbide-docs/docs/feedback","content":"Feedback Feedback is critical to us to continue to improve our tools and help you with your mission. For any issues, concerns, or questions, please open an issue: https://github.com/rancherfederal/carbide-docs/issues","keywords":"","version":"Next"},{"title":"Architecture","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/architecture","content":"","keywords":"","version":"Next"},{"title":"Pipeline Architecture​","type":1,"pageTitle":"Architecture","url":"/carbide-docs/docs/registry-docs/architecture#pipeline-architecture","content":"   ","version":"Next","tagName":"h2"},{"title":"Usage Architecture​","type":1,"pageTitle":"Architecture","url":"/carbide-docs/docs/registry-docs/architecture#usage-architecture","content":"  ","version":"Next","tagName":"h2"},{"title":"Known Limitations & Caveats","type":0,"sectionRef":"#","url":"/carbide-docs/docs/known-limits","content":"","keywords":"","version":"Next"},{"title":"Rancher Managing Cloud-Hosted Kubernetes​","type":1,"pageTitle":"Known Limitations & Caveats","url":"/carbide-docs/docs/known-limits#rancher-managing-cloud-hosted-kubernetes","content":" Currently, Rancher managing Cloud-Hosted Kubernetes (EKS, AKS, GKE, etc.) does not support private, secured registries for the agent that gets installed onto EKS for Rancher to manage it.Rancher Cluster Manager currently does not support managing Cloud-Hosted solutions in an airgap, to include serving images from a private registry.If you are managing Cloud-Hosted Kubernetes from Rancher in any capacity, do not update your Rancher's systemDefaultRegistry to point to a private registry holding the securing images. It will break Rancher's ability to manage those downstream clusters. ","version":"Next","tagName":"h3"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/introduction","content":"","keywords":"","version":"Next"},{"title":"IOC Expectations​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/registry-docs/introduction#ioc-expectations","content":" As our product is still in the IOC phase, there are some expectations to level-set:  IOC users can expect tooling and processes to be changed, improved and streamlined continuously as we strive to improve the Carbide offering.  DISCLAIMER: The Secured Registry (rgcrprod.azurecr.us) is not intended to be used as the primary registry for running Kubernetes clusters. It is only intended as the acquisition point to obtain the Carbide secured images. Customers should seed their own private OCI registries, and use that registry for their Kubernetes clusters.  If you see issues and areas for improvement, please submit Github issues here.  ","version":"Next","tagName":"h2"},{"title":"What is this?​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/registry-docs/introduction#what-is-this","content":" Here at Rancher Government Solutions, we take the security of our products seriously. Products like rke2 are tailor built to address the &quot;secure by default&quot; needs of the federal government, while still maintaining the same ease of deployments that our users have come to love from Rancher products.  The introduction of Carbide Secured Registry (CSR) marks the next big step we are taking to continually enhance our products emphasis on security, this time by directly addressing the supply chain.  Now, as an alternative to the &quot;upstream&quot; hosted images from Docker Hub, securely built images can now be sourced from the Carbide Secured Registry (CSR), and come with the following enhancements:  Attested build artifacts for core Rancher products (images, sbom's, and vulnerability reports)Securely built on Rancher Government's internally hosted Secure Software Factory (conforming to the DoD Reference Architecture and CNCF Best Practices)  Quantifiably measuring the improvements that Carbide Secured Registry (CSR) provides is difficult considering the early stage of standards around supply chain security. However, initial measurements can be gleaned from the Linux Foundation's SLSA levels.  The Carbide Secured Registry (CSR) was designed from the ground up to build the foundation for the eventual achievement of SLSA 4, or in other words, the most guarantee in a secure software supply chain. Specifically, this means introducing the following capabilities:  Fully defined as code build/release process with signed, non-falsifiable provenanceCustom built, isolated build infrastructure, conforming to best practices such as those defined in the DoD Reference Architecture, and CNCF Best PracticesVerifiable SBOMs and dependency vulnerability reports  If we follow the SLSA level requirements using the enhancements introduced with Carbide Secured Registry (CSR), it currently puts us firmly at a SLSA level 2 (up from SLSA 0). However, the astute readers will recognize that with the current verbatim implementation of SLSA levels, level 3 and 4 are currently unobtainable due to requirements such as &quot;accredited build platforms&quot;.  As stated earlier, the foundation for ultimately achieving SLSA 4 have been put in place to allow us to mature alongside software supply chain best practices, and standards. On that note, it's important to recognize that Carbide Secured Registry (CSR) is an ever evolving set of capabilities. Just as the standards and best practices around software supply chain security evolve, so will Carbide Secured Registry (CSR). ","version":"Next","tagName":"h2"},{"title":"Downloading the Images","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/downloading-images","content":"","keywords":"","version":"Next"},{"title":"Carbide​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#carbide","content":" NOTE: We are actively working to improve the collection and formatting of the below procceses. Additionally, please see the Hauler Docs for how to specify a specific platform.  # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # generate the hauler manifest for carbide cat &lt;&lt;EOF &gt; carbide-images.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: carbide-images annotations: hauler.dev/key: carbide-key.pub spec: images: $(curl -sfL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-images.txt | sed '/nats/d' | sed 's/^/ - name: /') --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: carbide-dependency-images spec: images: $(curl -sfL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-images.txt | sed '/rgcr/d' | sed 's/^/ - name: /') EOF # fetch the content from generated hauler manifest # verify the location of the key and the platform/architecture hauler store sync --files carbide-images.yaml --store carbide-store --platform &lt;platform/arch&gt; # save and output the content from the hauler store to tarball hauler store save --filename carbide-images.tar.zst   ","version":"Next","tagName":"h2"},{"title":"K3s​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#k3s","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the content from the carbide secured registry # verify the version, location of the key, and the platform/architecture hauler store sync --products k3s=v1.27.12-k3s1 --key carbide-key.pub --store k3s-store --platform &lt;platform/arch&gt; # save and output the content from the hauler store to tarball hauler store save --filename k3s-images.tar.zst   ","version":"Next","tagName":"h2"},{"title":"RKE2​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#rke2","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the content from the carbide secured registry # verify the version, location of the key, and the platform/architecture hauler store sync --products rke2=v1.27.12+rke2r1 --key carbide-key.pub --store rke2-store --platform &lt;platform/arch&gt; # save and output the content from the hauler store to tarball hauler store save --filename rke2-images.tar.zst   ","version":"Next","tagName":"h2"},{"title":"Rancher​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#rancher","content":" ","version":"Next","tagName":"h2"},{"title":"Cert Manager​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#cert-manager","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the content from the carbide secured registry # verify the version, location of the key, and the platform/architecture hauler store sync --products cert-manager=v1.14.4 --key carbide-key.pub --store certmanager-store --platform &lt;platform/arch&gt; # save and output the content from the hauler store to tarball hauler store save --filename certmanager-images.tar.zst   ","version":"Next","tagName":"h3"},{"title":"Rancher​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#rancher-1","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the content from the carbide secured registry # verify the version, location of the key, and the platform/architecture hauler store sync --products rancher=v2.8.3 --key carbide-key.pub --store rancher-store --platform &lt;platform/arch&gt; # save and output the content from the hauler store to tarball hauler store save --filename rancher-images.tar.zst   ","version":"Next","tagName":"h3"},{"title":"Longhorn​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#longhorn","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the content from the carbide secured registry # verify the version, location of the key, and the platform/architecture hauler store sync --products longhorn=v1.6.1 --key carbide-key.pub --store longhorn-store --platform &lt;platform/arch&gt; # save and output the content from the hauler store to tarball hauler store save --filename longhorn-images.tar.zst   ","version":"Next","tagName":"h2"},{"title":"NeuVector​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#neuvector","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the content from the carbide secured registry # verify the version, location of the key, and the platform/architecture hauler store sync --products neuvector=v5.3.2 --key carbide-key.pub --store neuvector-store --platform &lt;platform/arch&gt; # save and output the content from the hauler store to tarball hauler store save --filename neuvector-images.tar.zst   ","version":"Next","tagName":"h2"},{"title":"Kubewarden​","type":1,"pageTitle":"Downloading the Images","url":"/carbide-docs/docs/registry-docs/downloading-images#kubewarden","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the content from the carbide secured registry # verify the version, location of the key, and the platform/architecture hauler store sync --products kubewarden=kubewarden-controller-2.0.11 --key carbide-key.pub --store kubewarden-store --platform &lt;platform/arch&gt; # save and output the content from the hauler store to tarball hauler store save --filename kubewarden-images.tar.zst   See Loading Local Images to Registry for information on loading the images into your airgapped registry. ","version":"Next","tagName":"h2"},{"title":"Copying Images to a Registry","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/copying-images","content":"","keywords":"","version":"Next"},{"title":"Carbide​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#carbide","content":" NOTE: We are actively working to improve the collection and formatting of the below procceses. Additionally, please see the Hauler Docs for how to specify a specific platform.  # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # generate the hauler manifest for carbide cat &lt;&lt;EOF &gt; carbide-images.yaml apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: carbide-images annotations: hauler.dev/key: carbide-key.pub spec: images: $(curl -sfL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-images.txt | sed '/nats/d' | sed 's/^/ - name: /') --- apiVersion: content.hauler.cattle.io/v1alpha1 kind: Images metadata: name: carbide-dependency-images spec: images: $(curl -sfL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-images.txt | sed '/rgcr/d' | sed 's/^/ - name: /') EOF # fetch the content from generated hauler manifest # verify the location of the key and the platform/architecture hauler store sync --files carbide-images.yaml --store carbide-store --platform &lt;platform/arch&gt; # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h2"},{"title":"K3s​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#k3s","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the content from the carbide secured registry # verify the version, location of the key, and the platform/architecture hauler store sync --products k3s=v1.27.12-k3s1 --key carbide-key.pub --store k3s-store --platform &lt;platform/arch&gt; # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h2"},{"title":"RKE2​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#rke2","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the content from the carbide secured registry # verify the version, location of the key, and the platform/architecture hauler store sync --products rke2=v1.27.12+rke2r1 --key carbide-key.pub --store rke2-store --platform &lt;platform/arch&gt; # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h2"},{"title":"Rancher​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#rancher","content":" ","version":"Next","tagName":"h2"},{"title":"Cert Manager​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#cert-manager","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the content from the carbide secured registry # verify the version, location of the key, and the platform/architecture hauler store sync --products cert-manager=v1.14.4 --key carbide-key.pub --store certmanager-store --platform &lt;platform/arch&gt; # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Rancher​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#rancher-1","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the content from the carbide secured registry # verify the version, location of the key, and the platform/architecture hauler store sync --products rancher=v2.8.3 --key carbide-key.pub --store rancher-store --platform &lt;platform/arch&gt; # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Longhorn​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#longhorn","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the content from the carbide secured registry # verify the version, location of the key, and the platform/architecture hauler store sync --products longhorn=v1.6.1 --key carbide-key.pub --store longhorn-store --platform &lt;platform/arch&gt; # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h2"},{"title":"NeuVector​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#neuvector","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the content from the carbide secured registry # verify the version, location of the key, and the platform/architecture hauler store sync --products neuvector=v5.3.2 --key carbide-key.pub --store neuvector-store --platform &lt;platform/arch&gt; # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h2"},{"title":"Kubewarden​","type":1,"pageTitle":"Copying Images to a Registry","url":"/carbide-docs/docs/registry-docs/copying-images#kubewarden","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the content from the carbide secured registry # verify the version, location of the key, and the platform/architecture hauler store sync --products kubewarden=kubewarden-controller-2.0.11 --key carbide-key.pub --store kubewarden-store --platform &lt;platform/arch&gt; # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;  ","version":"Next","tagName":"h2"},{"title":"RKE2/K3s Configuration","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/kubernetes-config","content":"","keywords":"","version":"Next"},{"title":"Usage with k3s​","type":1,"pageTitle":"RKE2/K3s Configuration","url":"/carbide-docs/docs/registry-docs/kubernetes-config#usage-with-k3s","content":" To modify the system images that k3s uses upon bootstrapping, configure k3s' mirror settings as described here.  The full configuration using your authenticated registry is below:  # /etc/rancher/k3s/registries.yaml configs: &quot;&lt;registry-url&gt;&quot;: auth: username: &lt;redacted&gt; password: &lt;redacted&gt;   You will also need to utilize the system-default-registry flag when installing K3s to ensure it uses the registry. For instance:  curl -sfL https://get.k3s.io | sh -s - --system-default-registry=&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Usage with rke2​","type":1,"pageTitle":"RKE2/K3s Configuration","url":"/carbide-docs/docs/registry-docs/kubernetes-config#usage-with-rke2","content":" Similar to k3s, the Carbide Secured Registry (CSR) images are pulled upon bootstrapping by configuring rke2's mirroring configuration as described here.  The full configuration using the shared alpha account is below:  # /etc/rancher/rke2/registries.yaml configs: &quot;&lt;registry-url&gt;&quot;: auth: username: &lt;redacted&gt; password: &lt;redacted&gt;   You will also need to utilize the system-default-registry flag when installing RKE2 to ensure it uses the registry. For instance, if using the configuration file:  # /etc/rancher/rke2/config.yaml node-name: controlplane1 write-kubeconfig-mode: 0640 system-default-registry: &lt;registry-url&gt; ...  ","version":"Next","tagName":"h3"},{"title":"Loading Images to a Registry","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/loading-images","content":"","keywords":"","version":"Next"},{"title":"Carbide​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#carbide","content":" # load the content from the tarball to the hauler store hauler store load carbide-images.tar.zst # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h2"},{"title":"K3s​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#k3s","content":" # load the content from the tarball to the hauler store hauler store load k3s-images.tar.zst # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h2"},{"title":"RKE2​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#rke2","content":" # load the content from the tarball to the hauler store hauler store load rke2-images.tar.zst # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h2"},{"title":"Rancher​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#rancher","content":" ","version":"Next","tagName":"h2"},{"title":"Cert Manager​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#cert-manager","content":" # load the content from the tarball to the hauler store hauler store load certmanager-images.tar.zst # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Rancher​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#rancher-1","content":" # load the content from the tarball to the hauler store hauler store load rancher-images.tar.zst # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Longhorn​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#longhorn","content":" # load the content from the tarball to the hauler store hauler store load longhorn-images.tar.zst # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h2"},{"title":"NeuVector​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#neuvector","content":" # load the content from the tarball to the hauler store hauler store load neuvector-images.tar.zst # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h2"},{"title":"Kubewarden​","type":1,"pageTitle":"Loading Images to a Registry","url":"/carbide-docs/docs/registry-docs/loading-images#kubewarden","content":" # load the content from the tarball to the hauler store hauler store load kubewarden-images.tar.zst # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;  ","version":"Next","tagName":"h2"},{"title":"Prerequisites","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/prereqs","content":"","keywords":"","version":"Next"},{"title":"Registry Disclaimer​","type":1,"pageTitle":"Prerequisites","url":"/carbide-docs/docs/registry-docs/prereqs#registry-disclaimer","content":" The Carbide Secured Registry (rgcrprod.azurecr.us) is not intended to be used as the primary registry for running Kubernetes clusters. It is only intended as the acquisition point to obtain the Carbide images. Customers should seed their own private registries, and use that registry for their Kubernetes clusters.  ","version":"Next","tagName":"h2"},{"title":"Required Tools​","type":1,"pageTitle":"Prerequisites","url":"/carbide-docs/docs/registry-docs/prereqs#required-tools","content":" Packaging/Airgapping Tool: hauler  # example installation steps # please see the docs: https://rancherfederal.github.io/hauler-docs/docs/introduction/install curl -sfL https://get.hauler.dev | bash   Supply Chain Tool: cosign  # example installation steps # please see the docs: https://docs.sigstore.dev/system_config/installation curl -O -L &quot;https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64&quot; sudo mv cosign-linux-amd64 /usr/local/bin/cosign sudo chmod 755 /usr/local/bin/cosign   Container Tool: helm  # example installation steps # please see the docs: https://helm.sh/docs/intro/install curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 sudo chmod 755 get_helm.sh &amp;&amp; sudo ./get_helm.sh  ","version":"Next","tagName":"h2"},{"title":"Enforcement","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/enforcement","content":"","keywords":"","version":"Next"},{"title":"Kubewarden Enforcement​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#kubewarden-enforcement","content":" ","version":"Next","tagName":"h2"},{"title":"Installation​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#installation","content":" To install Kubewarden, run the following commands, substituting your registry information:  # add and update the helm chart repository helm repo add kubewarden https://charts.kubewarden.io helm repo update # install the crds helm chart helm install --wait -n kubewarden --create-namespace kubewarden-crds kubewarden/kubewarden-crds # install the controller helm chart helm install --wait -n kubewarden kubewarden-controller kubewarden/kubewarden-controller --set &quot;common.cattle.systemDefaultRegistry=&lt;registry-url&gt;&quot; # install the defaults helm chart helm install --wait -n kubewarden kubewarden-defaults kubewarden/kubewarden-defaults --set &quot;common.cattle.systemDefaultRegistry=&lt;registry-url&gt;&quot; kubewarden/kubewarden-defaults   For more information about installing Kubewarden, see the docs.  ","version":"Next","tagName":"h3"},{"title":"Private Registry​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#private-registry","content":" If your Rancher system images are in a private registry requiring authentication, you'll need to configure your Kubewarden policy-server with a Pull Secret in order for it to validate the signature.  ","version":"Next","tagName":"h3"},{"title":"Copying Policy Artifact to a Registry (Connected Environments)​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#copying-policy-artifact-to-a-registry-connected-environments","content":" # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the image from the carbide secured registry hauler store add image rgcrprod.azurecr.us/policies/verify-image-signatures:v0.1.7 --key carbide-key.pub --platform linux/amd64 # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Saving Policy Artifact (Airgaped Environments)​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#saving-policy-artifact-airgaped-environments","content":" Use the below script, substituting your registry, to both validate and save locally the policy artifact:  # authenticate into carbide secured registry hauler login -u &lt;redacted&gt; -p &lt;redacted&gt; rgcrprod.azurecr.us # download the public key for carbide curl -sfOL https://raw.githubusercontent.com/rancherfederal/carbide-releases/main/carbide-key.pub # fetch the image from the carbide secured registry hauler store add image rgcrprod.azurecr.us/policies/verify-image-signatures:v0.1.7 --key carbide-key.pub --platform linux/amd64 # save and output the content from the hauler store to tarball hauler store save --filename kubewarden-policy.tar.zst   ","version":"Next","tagName":"h3"},{"title":"Loading Policy Artifact to a Registry (Airgaped Environments)​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#loading-policy-artifact-to-a-registry-airgaped-environments","content":" Use the below script, substituting your registry, to load the policy artifact:  # load the content from the tarball to the hauler store hauler store load kubewarden-policy.tar.zst # copy the content from the hauler store to your registry hauler store copy --username &lt;redacted&gt; --password &lt;redacted&gt; registry://&lt;registry-url&gt;   ","version":"Next","tagName":"h3"},{"title":"Creating the Policy​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#creating-the-policy","content":" After installing/configuring Kubewarden and copying the policy to your registry, apply the following ClusterAdmissionPolicy (substituting &lt;registry-url&gt; with your registry domain):  apiVersion: policies.kubewarden.io/v1 kind: ClusterAdmissionPolicy metadata: name: verify-image-signatures spec: module: &lt;registry-url&gt;/policies/verify-image-signatures:v0.1.7 rules: - apiGroups: ['', 'apps', 'batch'] apiVersions: ['v1'] resources: [ 'pods', 'deployments', 'statefulsets', 'replicationcontrollers', 'jobs', 'cronjobs', ] operations: - CREATE - UPDATE mutating: true settings: signatures: - image: '&lt;registry-url&gt;/carbide/*' pubKeys: - | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q== -----END PUBLIC KEY----- - image: '&lt;registry-url&gt;/jetstack/*' pubKeys: - | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q== -----END PUBLIC KEY----- - image: '&lt;registry-url&gt;/rancher/*' pubKeys: - | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q== -----END PUBLIC KEY----- - image: '&lt;registry-url&gt;/longhornio/*' pubKeys: - | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q== -----END PUBLIC KEY----- - image: '&lt;registry-url&gt;/neuvector/*' pubKeys: - | -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q== -----END PUBLIC KEY-----   ","version":"Next","tagName":"h3"},{"title":"Kyverno Enforcement​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#kyverno-enforcement","content":" ","version":"Next","tagName":"h2"},{"title":"Installation​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#installation-1","content":" See the docs on how to install Kyverno onto your cluster.  ","version":"Next","tagName":"h3"},{"title":"Private Registry​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#private-registry-1","content":" If your Rancher system images are in a private registry requiring authentication, you'll need to configure your Kyverno policy-server with a Pull Secret in order for it to validate the signature.  ","version":"Next","tagName":"h3"},{"title":"Creating the Policy​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#creating-the-policy-1","content":" After installing/configuring Kyverno, apply the following Policy (substituting &lt;registry-url&gt; with your registry domain):  apiVersion: kyverno.io/v1 kind: Policy metadata: name: verify-image-signatures spec: validationFailureAction: enforce background: false webhookTimeoutSeconds: 30 failurePolicy: Fail rules: - name: check-image match: any: - resources: kinds: - Pod - Deployment verifyImages: - imageReferences: - '&lt;registry-url&gt;/carbide/*' - '&lt;registry-url&gt;/jetstack/*' - '&lt;registry-url&gt;/rancher/*' - '&lt;registry-url&gt;/longhornio/*' - '&lt;registry-url&gt;/neuvector/*' attestors: - count: 1 entries: - keys: publicKeys: |- -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE5zlXeLmRxBHbVmDRZpnCFdzKhyKO tCAZva7CLlk/6gxvCM0QkIKznfaGTRMMYTaHMdQSau6yulDLlpokA++i8Q== -----END PUBLIC KEY-----   ","version":"Next","tagName":"h3"},{"title":"OPA Gatekeeper Enforcement​","type":1,"pageTitle":"Enforcement","url":"/carbide-docs/docs/registry-docs/enforcement#opa-gatekeeper-enforcement","content":" Gatekeeper can be used to verify image signatures through its External Data Provider. ","version":"Next","tagName":"h2"},{"title":"Rancher Manager Configuration","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/rancher-config","content":"","keywords":"","version":"Next"},{"title":"Compatibility Matrix​","type":1,"pageTitle":"Rancher Manager Configuration","url":"/carbide-docs/docs/registry-docs/rancher-config#compatibility-matrix","content":" Infra\tProvisioner\tRegistry Auth Strategy\tTest StatusAny\tRancher (Cloud provisioner)\tGlobal Registry (Rancher)\tValidated Any\tRancher (Custom provisioner)\tAuthenticated Registry (Manual registries.yaml)\tValidated Any\tSelf Installation\tGlobal Registry (Rancher)\tValidated Any\tImported Cluster\tUnknown AWS-EKS\tRancher\tECR (public or private)\t  ","version":"Next","tagName":"h2"},{"title":"Configuring Cert Manager​","type":1,"pageTitle":"Rancher Manager Configuration","url":"/carbide-docs/docs/registry-docs/rancher-config#configuring-cert-manager","content":" As Rancher has a dependency on Cert Manager, you'll need to update your Helm install of Cert Manager to use Carbide Secured Registry (CSR) images that are validated and signed by Rancher Government.  If you're following Rancher's Connected installation instructions, you'll need to follow the next steps to use the Carbide Secured Registry (CSR) images for cert-manager.  If using the Airgapped installation instructions, make sure you've pulled the images to your local/airgapped registry.  ","version":"Next","tagName":"h2"},{"title":"Cert Manager Helm Install​","type":1,"pageTitle":"Rancher Manager Configuration","url":"/carbide-docs/docs/registry-docs/rancher-config#cert-manager-helm-install","content":" Follow Rancher's Connected installation instructions, but using the following steps instead of the helm install command from the docs.  After adding the Cert Manager repo and installing the CRDs, use the following to create a temporary values.yaml for your chart, subsituting your registry domain:  cat &lt;&lt;EOT &gt; /tmp/cert-manager-values.yaml image: registry: &lt;registry-url&gt; repository: jetstack/cert-manager-controller webhook: image: registry: &lt;registry-url&gt; repository: jetstack/cert-manager-webhook cainjector: image: registry: &lt;registry-url&gt; repository: jetstack/cert-manager-cainjector startupapicheck: image: registry: &lt;registry-url&gt; repository: jetstack/cert-manager-startupapicheck acmesolver: image: registry: &lt;registry-url&gt; repository: jetstack/cert-manager-acmesolver EOT   Then use the following helm install command to use the images:  helm install cert-manager jetstack/cert-manager \\ --namespace cert-manager \\ --create-namespace \\ --version v1.14.4 \\ -f /tmp/values.yaml   ","version":"Next","tagName":"h3"},{"title":"Registry Auth Scenarios​","type":1,"pageTitle":"Rancher Manager Configuration","url":"/carbide-docs/docs/registry-docs/rancher-config#registry-auth-scenarios","content":" ","version":"Next","tagName":"h2"},{"title":"Global Registry​","type":1,"pageTitle":"Rancher Manager Configuration","url":"/carbide-docs/docs/registry-docs/rancher-config#global-registry","content":" Setting a Private Registry with No Credentials as the Default Registry​  Log into Rancher and configure the default administrator password.Click ☰ &gt; Global Settings.Go to the setting called system-default-registry and choose ⋮ &gt; Edit Setting.Change the value to your registry (e.g. registry.yourdomain.com:port). Do not prefix the registry with http:// or https://.  Result: Rancher will use your private registry to pull system images.  Setting a Private Registry with Credentials when Deploying a Cluster​  You can follow these steps to configure a private registry when you create a cluster:  Click ☰ &gt; Cluster Management.On the Clusters page, click Create.Choose a cluster type.In the Cluster Configuration go to the Registries tab and click Pull images for Rancher from a private registry.Enter the registry hostname and credentials.Click Create.  Result: The new cluster will be able to pull images from the private registry.  ","version":"Next","tagName":"h3"},{"title":"Manual registries.yaml configuration (RKE2/k3s)​","type":1,"pageTitle":"Rancher Manager Configuration","url":"/carbide-docs/docs/registry-docs/rancher-config#manual-registriesyaml-configuration-rke2k3s","content":" In order to configure authentication to the CRI before pulling down the base kubernetes container image. To modify the system images that k3s or rke2 uses upon bootstrapping, configure k3s' mirror settings as described here.  The full configuration using the shared alpha account is below:  # /etc/rancher/k3s/registries.yaml # /etc/rancher/rke2/registries.yaml mirrors: docker.io: endpoint: - &quot;https://&lt;registry-url&gt;&quot; configs: &quot;&lt;registry-url&gt;&quot;: auth: username: &lt;redacted&gt; password: &lt;redacted&gt;   registries.yaml Strategy​  Scenario\tBest practiceUse of a 'golden image'\tPre-configure registries.yaml on golden image before host provisioning Rancher provisioned cluster\tEmbed a cloud-init file into cluster provisioning (Example below) Ansible/Saltstack/Manual\tPre-configure registries.yaml on host before cluster provisioning  ","version":"Next","tagName":"h3"},{"title":"Usage with Rancher​","type":1,"pageTitle":"Rancher Manager Configuration","url":"/carbide-docs/docs/registry-docs/rancher-config#usage-with-rancher","content":" Follow Rancher's Installation Guide, adding in the following steps to use our Carbide Helm Chart and the helm install command.  When installing Rancher, to utilize the private registry, you'll need to set the following values in your Helm values:  helm repo add carbide-charts https://rancherfederal.github.io/carbide-charts helm repo update helm search repo carbide-charts helm install rancher carbide-charts/rancher \\ --namespace cattle-system \\ --set hostname=rancher.my.org \\ --set replicas=3 \\ --set rancherImage=&lt;registry-url&gt;/rancher/rancher --set systemDefaultRegistry=&lt;registry-url&gt;   NOTE: This requires configuring your above K3s/RKE2 registries.yaml to work.  Example cloud-init (RKE2)​  # cloud-init runcmd: - mkdir /etc/rancher/rke2 write_files: - path: /etc/rancher/rke2/registries.yaml content: | mirrors: docker.io: endpoint: - &quot;https://&lt;registry-url&gt;&quot; configs: &quot;&lt;registry-url&gt;&quot;: auth: username: &lt;redacted&gt; password: &lt;redacted&gt; permissions: '0644'  ","version":"Next","tagName":"h3"},{"title":"Release Cadence","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/release-cadence","content":"","keywords":"","version":"Next"},{"title":"Pipelines (Current State)​","type":1,"pageTitle":"Release Cadence","url":"/carbide-docs/docs/registry-docs/release-cadence#pipelines-current-state","content":" Currently, pipelines against the Rancher product portfolio execute nightly. That means that, if a new release of a Rancher product occurs, it will be available through Carbide the next day.  ","version":"Next","tagName":"h2"},{"title":"Pipelines (Future State)​","type":1,"pageTitle":"Release Cadence","url":"/carbide-docs/docs/registry-docs/release-cadence#pipelines-future-state","content":" We are actively working towards a reactive approach to our pipelines, and should soon support our pipelines triggering directly after a release of a Rancher product occurs. Given the pipelines will take time to process, this will mean the images will be available in a matter of minutes/hours after the upstream release, depending on the number of images for the product. ","version":"Next","tagName":"h2"},{"title":"RKE2/K3s Uninstall","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/uninstall-kubernetes","content":"","keywords":"","version":"Next"},{"title":"K3s​","type":1,"pageTitle":"RKE2/K3s Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-kubernetes#k3s","content":" ","version":"Next","tagName":"h2"},{"title":"Reverting to DockerHub Images (Private Registry)​","type":1,"pageTitle":"RKE2/K3s Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-kubernetes#reverting-to-dockerhub-images-private-registry","content":" If using a private registry, to revert from using the Carbide Secured Images to the normal Rancher images, you simply need to follow the docs to pull the normal images and overwrite them in your registry: https://docs.k3s.io/installation/airgap  Upon restart of your pods, they should be utilizing the upstream images.  NOTE: If you've configured enforcement using Kubewarden or Kyverno, be sure to disable/uninstall to avoid policy enforcement blocking DockerHub images.  ","version":"Next","tagName":"h3"},{"title":"Reverting to DockerHub Images (Directly)​","type":1,"pageTitle":"RKE2/K3s Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-kubernetes#reverting-to-dockerhub-images-directly","content":" If you want to revert to using images directly from Docker Hub, you'll need to delete the registries.yaml configuration file made here.  You will also need to unset the system-default-registry configuration when installing K3s by re-running the curl command used to install K3s on each node, with the parameter unset.  For instance, if you originally ran the following when using Carbide images:  curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=&quot;server --flannel-backend none&quot; K3S_TOKEN=12345 sh - --system-default-registry &lt;registry-url&gt;   You'd need to run:  curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=&quot;server --flannel-backend none&quot; K3S_TOKEN=12345 sh -   ","version":"Next","tagName":"h3"},{"title":"RKE2​","type":1,"pageTitle":"RKE2/K3s Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-kubernetes#rke2","content":" ","version":"Next","tagName":"h2"},{"title":"Reverting to DockerHub Images (Private Registry)​","type":1,"pageTitle":"RKE2/K3s Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-kubernetes#reverting-to-dockerhub-images-private-registry-1","content":" If using a private registry, to revert from using the Carbide Secured Images to the normal Rancher images, you simply need to follow the docs to pull the normal images and overwrite them in your registry: https://docs.rke2.io/install/airgap  Upon restart of your pods, they should be utilizing the upstream images.  ","version":"Next","tagName":"h3"},{"title":"Reverting to DockerHub Images (Directly)​","type":1,"pageTitle":"RKE2/K3s Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-kubernetes#reverting-to-dockerhub-images-directly-1","content":" If you want to revert to using images directly from Docker Hub, you'll need to delete the registries.yaml configuration file made here.  You'll also need to clean up the system-default-registry key/value from your /etc/rancher/rke2/config.yaml file on each node, and restart rke2.  # /etc/rancher/rke2/config.yaml node-name: controlplane1 write-kubeconfig-mode: 0640 ...   To restart controlplane nodes, run: systemctl restart rke2-serverTo restart agents, run: systemctl restart rke2-agent  NOTE: For controlplane nodes, be sure to restart them one at a time. ","version":"Next","tagName":"h3"},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/carbide-docs/docs/stigatron-docs/getting-started","content":"","keywords":"","version":"Next"},{"title":"STIGATRON Images​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/stigatron-docs/getting-started#stigatron-images","content":" The images for STIGATRON can be found here. You'll need to pull these images using hauler.  ","version":"Next","tagName":"h2"},{"title":"Internet-Connected Environment​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/stigatron-docs/getting-started#internet-connected-environment","content":" If you're working in a connected environment, look here for instructions on pulling the images into your registry.  ","version":"Next","tagName":"h3"},{"title":"Airgapped Environment​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/stigatron-docs/getting-started#airgapped-environment","content":" If you're working in an airgapped environment, look here for instructions on pulling the images locally.  On the airgap, look here for loading the localized images into the airgapped registry.  ","version":"Next","tagName":"h3"},{"title":"STIGATRON Helm Chart​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/stigatron-docs/getting-started#stigatron-helm-chart","content":" The chart for STIGATRON can be found here. You'll need to pull the chart using hauler.  ","version":"Next","tagName":"h2"},{"title":"Configuring Registry Credentials​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/stigatron-docs/getting-started#configuring-registry-credentials","content":" ","version":"Next","tagName":"h2"},{"title":"Local Cluster​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/stigatron-docs/getting-started#local-cluster","content":" On the local cluster running Rancher Multi-cluster Manager, you'll need to configure credentials for the registry with the STIGATRON images. See the Rancher Configuration on how to set up those credentials.  ","version":"Next","tagName":"h3"},{"title":"Downstream Clusters​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/stigatron-docs/getting-started#downstream-clusters","content":" For downstream clusters, you'll need to also configure registry credentials. Depending on how RKE2 was configured and set up, there are a few ways to do this.  ","version":"Next","tagName":"h3"},{"title":"Rancher-Provisioned Cluster​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/stigatron-docs/getting-started#rancher-provisioned-cluster","content":" If you provisioned or are provisioning RKE2 directly from the Rancher UI, you can configure/update that cluster with credentials.  Click the upper-left menu and navigate to Cluster Management.If updating an existing cluster, select that cluster, click the 3-dot menu in the upper-right, and select Edit Config. If creating a new cluster, just click Create in the upper-left.Once you get to the screen to update/create the cluster's node pools, scroll to the bottom under Cluster Configuration and find the Registries tab.Select the second option (Use specified private registry for Rancher System Container Images).Enter your registry hostname in the first box.In the Authentication box, select Create a HTTP Basic Auth Secret and enter your credentials.  For future clusters using the same registry, you can just select existing secret.  Click Save.    Wait for cluster to reconcile.  ","version":"Next","tagName":"h3"},{"title":"Imported Cluster​","type":1,"pageTitle":"Getting Started","url":"/carbide-docs/docs/stigatron-docs/getting-started#imported-cluster","content":" If you're working with a cluster that was imported or is to be imported into the Rancher MCM, you'll need to update the containerd registries.yaml file on every node, substituting your registry hostname and credentials:  # /etc/rancher/k3s/registries.yaml # /etc/rancher/rke2/registries.yaml configs: &quot;&lt;registry-url&gt;&quot;: auth: username: &lt;redacted&gt; password: &lt;redacted&gt;  ","version":"Next","tagName":"h3"},{"title":"Creating STIGATRON Scans","type":0,"sectionRef":"#","url":"/carbide-docs/docs/stigatron-docs/create-scan","content":"","keywords":"","version":"Next"},{"title":"Profile Selection​","type":1,"pageTitle":"Creating STIGATRON Scans","url":"/carbide-docs/docs/stigatron-docs/create-scan#profile-selection","content":" When selecting a STIGATRON Scan Profile, there are 2 options for each support Kubernetes version:  Official: This is the officially certified version from DISA. While fully certified, it may be missing the latest security requirements currently in process for STIG reevaluations and fixes.Preview: This is the latest version currently being worked and submitted to DISA from Rancher Government. This will contain the latest STIG fixes and reevaluations, even before being fully certified.  It is useful to leverage both versions when scanning to understand your cluster's current state against both of the current and future STIGs. ","version":"Next","tagName":"h2"},{"title":"Rancher Manager Uninstall","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/uninstall-rancher","content":"","keywords":"","version":"Next"},{"title":"Reverting Cert Manager​","type":1,"pageTitle":"Rancher Manager Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-rancher#reverting-cert-manager","content":" As Rancher has a dependency on Cert Manager, you'll need to update your Helm install of Cert Manager to use the default images.  ","version":"Next","tagName":"h2"},{"title":"Using Your Own Registry​","type":1,"pageTitle":"Rancher Manager Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-rancher#using-your-own-registry","content":" If using your own registry, you simply need to collect the necessary images for cert-manager and overwrite those images in your registry.  As pods cycle, the new image should propagate across the cluster.  ","version":"Next","tagName":"h3"},{"title":"Using Docker Hub Images​","type":1,"pageTitle":"Rancher Manager Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-rancher#using-docker-hub-images","content":" If you want to go back to using Docker Hub images directly, you'll need to upgrade the cert-manager installation to revert pointing to the private registry hosting the Carbide images:  helm install cert-manager jetstack/cert-manager \\ --namespace cert-manager \\ --create-namespace \\ --version v1.14.4   ","version":"Next","tagName":"h3"},{"title":"Registry Auth Scenarios​","type":1,"pageTitle":"Rancher Manager Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-rancher#registry-auth-scenarios","content":" ","version":"Next","tagName":"h2"},{"title":"Global Registry​","type":1,"pageTitle":"Rancher Manager Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-rancher#global-registry","content":" Uninstall Carbide Images on Rancher (Private Registry)​  If using your own registry, you simply need to collect the necessary images for Rancher and overwrite those images in your registry.  As pods cycle, the new image should propagate across the cluster.  Uninstall Carbide Images on Rancher (Docker Hub)​  If wanting to use upgrade Docker Hub images for Rancher:  Log into Rancher and configure the default administrator password.Click ☰ &gt; Global Settings.Go to the setting called system-default-registry and choose ⋮ &gt; Edit Setting.Click the Use the default value button.  Result: Rancher will use your private registry to pull system images.  Reverting Downstream Clusters to use DockerHub Images​  If you want to revert downstream RKE2/K3s clusters to use DockerHub images:  Click ☰ &gt; Cluster Management.On the Clusters page, select the 3-dot button to the right for downstream cluster you'd like to revert, and select Edit Config..In the Cluster Configuration go to the Registries tab and click Use default global registry for Rancher System Container Images.Click Save.  Result: The cluster will update nodepools to use DockerHub images.  ","version":"Next","tagName":"h3"},{"title":"Manual registries.yaml configuration (RKE2/k3s)​","type":1,"pageTitle":"Rancher Manager Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-rancher#manual-registriesyaml-configuration-rke2k3s","content":" See the RKE2/K3s Uninstall documentation.  ","version":"Next","tagName":"h3"},{"title":"Reverting Rancher Chart​","type":1,"pageTitle":"Rancher Manager Uninstall","url":"/carbide-docs/docs/registry-docs/uninstall-rancher#reverting-rancher-chart","content":" Follow Rancher's Installation Guide, you can revert to using DockerHub images by removing values from the Helm upgrade command.  helm upgrade rancher rancher-latest/rancher \\ --namespace cattle-system \\ --set hostname=rancher.my.org \\ --set replicas=3  ","version":"Next","tagName":"h3"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/carbide-docs/docs/stigatron-docs/introduction","content":"","keywords":"","version":"Next"},{"title":"IOC Expectations​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/stigatron-docs/introduction#ioc-expectations","content":" As our product is still at Initial Operation Capability (IOC), there are some expectations to level-set:  Installation and packaging is still in progress and improving.  If you see issues and areas for improvement, please submit Github issues here.  ","version":"Next","tagName":"h2"},{"title":"What is this?​","type":1,"pageTitle":"Introduction","url":"/carbide-docs/docs/stigatron-docs/introduction#what-is-this","content":" With our Federal/Government driven Kubernetes Distribution RKE2, we worked dilligently to provide the first Kubernetes distribution outside of the upstream project to obtain full DISA STIG Certification.  While having the STIG provides immense benefits to our customers, we also wanted to improve the UX around working with that STIG. That is why we developed STIGATRON. STIGATRON will give our users capabilities that alleviate a lot of the pain points that go with traditional management of maintaining and assessing compliance of your systems:  STIGATRON provides the ability to perform a real-time scan against all downstream clusters being managed by the Rancher Multi-cluster Manager.These scans will provide a mapping of the current state of the cluster against the controls with the RKE2 DISA STIG.Users can visualize the results of these scans from the Rancher UI by access the MITRE Heimdall2 interface. This provides current compliance status, tree maps mapping to NIST 800-53 controls, and a detailed breakdown of each check performed, including the commands executed, the output of those commands, and what steps can be performed to mitigate any failures.Users can also export the scan results into the common formats required by Cyber Systems within the federal space. This includes XCCDF and results.json. ","version":"Next","tagName":"h2"},{"title":"Installation","type":0,"sectionRef":"#","url":"/carbide-docs/docs/stigatron-docs/installation","content":"","keywords":"","version":"Next"},{"title":"Local Cluster​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/stigatron-docs/installation#local-cluster","content":" ","version":"Next","tagName":"h2"},{"title":"Enabling UI Extensions​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/stigatron-docs/installation#enabling-ui-extensions","content":" On the local cluster running Rancher MCM, you'll need to first enable Extensions.  Log into the Rancher MCM as an administrator.Click the menu in the upper-left of the main dashboard and click the Extensions link near the bottom.Click the Enable button on the Extensions screen.Click Ok, when prompted to Enable Extension Support.    ","version":"Next","tagName":"h3"},{"title":"Installing STIGATRON UI Plugin​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/stigatron-docs/installation#installing-stigatron-ui-plugin","content":" Next, on the same local cluster, run the following Helm commands to install the UI Plugin for STIGATRON (see the tgz method above for airgap with no Helm repository) and ensure to substitute your registry:  helm install -n carbide-stigatron-system --create-namespace \\ --set &quot;global.cattle.systemDefaultRegistry=&lt;registry-url&gt;&quot; \\ stigatron-ui carbide-charts/stigatron-ui   Check the status of the rollout:  helm status -n carbide-stigatron-system stigatron-ui   ","version":"Next","tagName":"h3"},{"title":"Downstream Clusters​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/stigatron-docs/installation#downstream-clusters","content":" ","version":"Next","tagName":"h2"},{"title":"Installing CIS Benchmark Operator​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/stigatron-docs/installation#installing-cis-benchmark-operator","content":" On downstream clusters, you'll need to first install Rancher's CIS Benchmark Operator:  Navigate to your cluster in the Explore Cluster menu.On the left, select Apps and click Charts.In the Filter box on the right, type CIS Benchmark.Review the Chart Information and when ready click Install.Leave all default values, select Next, and then click Install.Wait for the installation to complete and feel free to close the kubectl shell.  ","version":"Next","tagName":"h3"},{"title":"Creating the License Secret​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/stigatron-docs/installation#creating-the-license-secret","content":" Next, you'll need to create the carbide-stigatron-system namespace and create a secret named stigatron-license containing your Carbide License. This step is critical, as STIGATRON operator will not start without this secret present:  # Create the namespace kubectl create namespace carbide-stigatron-system # Now create the secret, substituting your license kubectl create secret generic stigatron-license -n carbide-stigatron-system --from-literal=license=YOUR_LICENSE_HERE   ","version":"Next","tagName":"h3"},{"title":"Installing STIGATRON Operator​","type":1,"pageTitle":"Installation","url":"/carbide-docs/docs/stigatron-docs/installation#installing-stigatron-operator","content":" Next, you'll need to run the following Helm command to install the STIGATRON Operator (NOTE: Using carbide-stigatron-system as the namespace is required):  helm install -n carbide-stigatron-system \\ --set &quot;global.cattle.systemDefaultRegistry=&lt;registry-url&gt;&quot; \\ --set &quot;heimdall2.global.cattle.systemDefaultRegistry=&lt;registry-url&gt;&quot; \\ stigatron carbide-charts/stigatron   Check the status of the rollout:  helm status -n carbide-stigatron-system stigatron   You should now see STIGATRON on the left menu of your Explore Cluster. ","version":"Next","tagName":"h3"},{"title":"Validating Images","type":0,"sectionRef":"#","url":"/carbide-docs/docs/registry-docs/validating-images","content":"","keywords":"","version":"Next"},{"title":"Secure Supply Chain​","type":1,"pageTitle":"Validating Images","url":"/carbide-docs/docs/registry-docs/validating-images#secure-supply-chain","content":" Before pulling images or even after images have been pushed to a registry, you should always verify those images against the carbide public key. Below are the instructions for using cosign directly from a registry.  NOTE: You'll need to substitute rgcrprod.azurecr.us with your own registry domain, if verifying images in your own registry.  Carbide Images v2 (Starting 03/2024) In Carbide Images v2 (or Cosign v2), the attachment of supply chain artifacts to the top layer of an image has been deprecated. In order for us to maintain interoperability, we have migrated our images and supply chain artifacts to be attached at the individual layer for a specific platform or architecture of an image. If you would like to see more information, please see the noticed posted here! Display Supply Chain Artifacts​ # display supply chain related artifacts for an image cosign tree rgcrprod.azurecr.us/carbide/carbide-docs:0.1.4 📦 Supply Chain Security Related artifacts for an image: rgcrprod.azurecr.us/carbide/carbide-docs:0.1.4 └── 🔐 Signatures for an image tag: rgcrprod.azurecr.us/carbide/carbide-docs:sha256-9f4251c8cb5161b7a1670788d4e716e735779804933e4db7698a625a2c762a44.sig └── 🍒 sha256:9e1b59dc650801d4d088c7b816a34f2fb9d8e53a040615750bc45d9202b522b0 # display supply chain related artifacts for an image # example image digest for carbide-docs:0.1.4 for linux/amd64 cosign tree rgcrprod.azurecr.us/carbide/carbide-docs@sha256:9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91 📦 Supply Chain Security Related artifacts for an image: rgcrprod.azurecr.us/carbide/carbide-docs@sha256:9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91 └── 💾 Attestations for an image tag: rgcrprod.azurecr.us/carbide/carbide-docs:sha256-9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91.att ├── 🍒 sha256:dfa305431fecc7148b2975285295701a4e7e2f314bda41efa1fe4fb31758dc68 └── 🍒 sha256:133e5c020fe7fd20ae4453a9193a3b2a5e36a0447aa9d322ba83494bfde912d4 └── 🔐 Signatures for an image tag: rgcrprod.azurecr.us/carbide/carbide-docs:sha256-9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91.sig └── 🍒 sha256:f8cf6aea22f450991fc1800bc0b1440377a40833a94ff51c850210218fd5ad4d Verifying the Digital Signature​ # verify the image's attestation by validating the supplied signature cosign verify --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs:0.1.4 | jq Viewing the Software Bill of Materials​ # verify the image's sbom attestation by validating the supplied signature cosign verify-attestation --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs@sha256:9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91 --type spdxjson | jq # view the image's sbom cosign verify-attestation --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs@sha256:9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91 --type spdxjson | jq -r '.payload' | base64 -d | jq Viewing the Vulnerability Scan Results​ # verify the image's vulnerability attestation by validating the supplied signature cosign verify-attestation --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs@sha256:9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91 --type vuln | jq # view the image's vulnerability scan results cosign verify-attestation --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs@sha256:9cfda4875822b37f1e899c962e9bae5bb709235a1794834a839eaa74f429eb91 --type vuln | jq -r '.payload' | base64 -d | jq   Carbide v1 (Before 03/2024) Display Supply Chain Artifacts​ # display supply chain related artifacts for an image cosign tree rgcrprod.azurecr.us/carbide/carbide-docs:0.1.3 📦 Supply Chain Security Related artifacts for an image: rgcrprod.azurecr.us/carbide/carbide-docs:0.1.3 └── 💾 Attestations for an image tag: rgcrprod.azurecr.us/carbide/carbide-docs:sha256-4d8b3e7e6e1a7640ca5f4ea833a5aef7a6f031947093e3e7625c8c949c1c8839.att └── 🍒 sha256:8890d36772569483c9295be31a779770af0a61b51c6ba83cecc699fc724b9fd7 └── 🔐 Signatures for an image tag: rgcrprod.azurecr.us/carbide/carbide-docs:sha256-4d8b3e7e6e1a7640ca5f4ea833a5aef7a6f031947093e3e7625c8c949c1c8839.sig └── 🍒 sha256:a28126ae0a4bb23f71787e912125c25232677f6948812d937fd8feb9fe03ac6f └── 📦 SBOMs for an image tag: rgcrprod.azurecr.us/carbide/carbide-docs:sha256-4d8b3e7e6e1a7640ca5f4ea833a5aef7a6f031947093e3e7625c8c949c1c8839.sbom └── 🍒 sha256:970fc626b7075bd4822083cebc26d2e7cfcc1d5f1bfbcf9c3d0b3543a769be99 Verifying the Digital Signature​ # verify the image's attestation by validating the supplied signature cosign verify --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs:0.1.3 Viewing the Software Bill of Materials​ # verify the image's SBOM attestation by validating the supplied signature cosign verify --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs:0.1.3 --attachment sbom # view the image's SBOM cosign download sbom rgcrprod.azurecr.us/carbide/carbide-docs:0.1.3 Viewing the Vulnerability Scan Results​ # verify the image's SBOM attestation by validating the supplied signature cosign verify-attestation --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs:0.1.3 --type vuln | jq # view the image's vulnerability scan results cosign verify-attestation --key carbide-key.pub rgcrprod.azurecr.us/carbide/carbide-docs:0.1.3 --type vuln | jq -r '.payload' | base64 -d | jq   ","version":"Next","tagName":"h2"},{"title":"Resources​","type":1,"pageTitle":"Validating Images","url":"/carbide-docs/docs/registry-docs/validating-images#resources","content":" For more information on cosign, check out the Chainguard Academy. ","version":"Next","tagName":"h3"},{"title":"Prerequisites","type":0,"sectionRef":"#","url":"/carbide-docs/docs/stigatron-docs/prereqs","content":"Prerequisites In order to utilize STIGATRON, you will need the following prerequisites: Rancher v2.7.0 or higher: https://ranchermanager.docs.rancher.com/integrations-in-rancher/rancher-extensionsFor fetching and packaging... Hauler: https://github.com/rancherfederal/haulerFor installation and deployment... Helm: https://helm.sh/docs/intro/installAccess to the local cluster, to be able to install and deploy the app(s).Access to the downstream cluster(s), to be able to install and deploy the app(s).","keywords":"","version":"Next"},{"title":"Using MITRE Heimdall","type":0,"sectionRef":"#","url":"/carbide-docs/docs/stigatron-docs/using-heimdall","content":"Using MITRE Heimdall To export scan results to common formats, select the Export button in the upper-left. Select the desired export format.","keywords":"","version":"Next"},{"title":"Uninstall","type":0,"sectionRef":"#","url":"/carbide-docs/docs/stigatron-docs/uninstall","content":"","keywords":"","version":"Next"},{"title":"Local Cluster​","type":1,"pageTitle":"Uninstall","url":"/carbide-docs/docs/stigatron-docs/uninstall#local-cluster","content":" On the local cluster running Rancher MCM, run the following Helm command to remove the UI Extension.  helm uninstall -n carbide-stigatron-system stigatron-ui carbide-charts/stigatron-ui   ","version":"Next","tagName":"h2"},{"title":"Downstream Clusters​","type":1,"pageTitle":"Uninstall","url":"/carbide-docs/docs/stigatron-docs/uninstall#downstream-clusters","content":" On each downstream cluster, run the following command to uninstall STIGATRON:  helm uninstall -n carbide-stigatron-system stigatron   ","version":"Next","tagName":"h2"},{"title":"Uninstalling CIS Benchmark (Optional)​","type":1,"pageTitle":"Uninstall","url":"/carbide-docs/docs/stigatron-docs/uninstall#uninstalling-cis-benchmark-optional","content":" If you want to uninstall CIS Benchmark, after uninstall STIGATRON, perform the following:  Log into the Rancher MCM.In the UI, navigate to each downstream cluster in the Cluster Explorer.On the left menu, select Apps, then select Installed Apps.Find the app named rancher-cis-benchmark, select the 3-dot menu on the right, and select Delete. (IMPORTANT: Delete this before the CRD application)Find the app named rancher-cis-benchmark-crd, select the 3-dot menu on the right, and select Delete.  ","version":"Next","tagName":"h2"},{"title":"Disable UI Extensions (Optional)​","type":1,"pageTitle":"Uninstall","url":"/carbide-docs/docs/stigatron-docs/uninstall#disable-ui-extensions-optional","content":" If you want to disable UI Extensions, after uninstall STIGATRON UI, perform the following:  ","version":"Next","tagName":"h2"},{"title":"TODO: List​","type":1,"pageTitle":"Uninstall","url":"/carbide-docs/docs/stigatron-docs/uninstall#todo-list","content":"","version":"Next","tagName":"h3"}],"options":{"languages":["en"],"indexBaseUrl":true,"highlightResult":true,"id":"default"}}